{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventListeners = void 0;\nconst Enums_1 = require(\"../Enums\");\nconst Constants_1 = require(\"./Constants\");\nfunction manageListener(element, event, handler, add, options) {\n  if (add) {\n    let addOptions = {\n      passive: true\n    };\n    if (typeof options === \"boolean\") {\n      addOptions.capture = options;\n    } else if (options !== undefined) {\n      addOptions = options;\n    }\n    element.addEventListener(event, handler, addOptions);\n  } else {\n    const removeOptions = options;\n    element.removeEventListener(event, handler, removeOptions);\n  }\n}\nclass EventListeners {\n  constructor(container) {\n    this.container = container;\n    this.canPush = true;\n    this.mouseMoveHandler = e => this.mouseTouchMove(e);\n    this.touchStartHandler = e => this.mouseTouchMove(e);\n    this.touchMoveHandler = e => this.mouseTouchMove(e);\n    this.touchEndHandler = () => this.mouseTouchFinish();\n    this.mouseLeaveHandler = () => this.mouseTouchFinish();\n    this.touchCancelHandler = () => this.mouseTouchFinish();\n    this.touchEndClickHandler = e => this.mouseTouchClick(e);\n    this.mouseUpHandler = e => this.mouseTouchClick(e);\n    this.mouseDownHandler = () => this.mouseDown();\n    this.visibilityChangeHandler = () => this.handleVisibilityChange();\n    this.resizeHandler = () => this.handleWindowResize();\n  }\n  addListeners() {\n    this.manageListeners(true);\n  }\n  removeListeners() {\n    this.manageListeners(false);\n  }\n  manageListeners(add) {\n    var _a;\n    const container = this.container;\n    const options = container.actualOptions;\n    const detectType = options.interactivity.detectsOn;\n    let mouseLeaveEvent = Constants_1.Constants.mouseLeaveEvent;\n    if (detectType === Enums_1.InteractivityDetect.window) {\n      container.interactivity.element = window;\n      mouseLeaveEvent = Constants_1.Constants.mouseOutEvent;\n    } else if (detectType === Enums_1.InteractivityDetect.parent && container.canvas.element) {\n      const canvasEl = container.canvas.element;\n      container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n    } else {\n      container.interactivity.element = container.canvas.element;\n    }\n    const interactivityEl = container.interactivity.element;\n    if (!interactivityEl) {\n      return;\n    }\n    const html = interactivityEl;\n    if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n      manageListener(interactivityEl, Constants_1.Constants.mouseMoveEvent, this.mouseMoveHandler, add);\n      manageListener(interactivityEl, Constants_1.Constants.touchStartEvent, this.touchStartHandler, add);\n      manageListener(interactivityEl, Constants_1.Constants.touchMoveEvent, this.touchMoveHandler, add);\n      if (!options.interactivity.events.onClick.enable) {\n        manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndHandler, add);\n      } else {\n        manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndClickHandler, add);\n        manageListener(interactivityEl, Constants_1.Constants.mouseUpEvent, this.mouseUpHandler, add);\n        manageListener(interactivityEl, Constants_1.Constants.mouseDownEvent, this.mouseDownHandler, add);\n      }\n      manageListener(interactivityEl, mouseLeaveEvent, this.mouseLeaveHandler, add);\n      manageListener(interactivityEl, Constants_1.Constants.touchCancelEvent, this.touchCancelHandler, add);\n    }\n    if (container.canvas.element) {\n      container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n    }\n    if (options.interactivity.events.resize) {\n      manageListener(window, Constants_1.Constants.resizeEvent, this.resizeHandler, add);\n    }\n    if (document) {\n      manageListener(document, Constants_1.Constants.visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n    }\n  }\n  handleWindowResize() {\n    if (this.resizeTimeout) {\n      clearTimeout(this.resizeTimeout);\n      delete this.resizeTimeout;\n    }\n    this.resizeTimeout = setTimeout(() => {\n      var _a;\n      return (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize();\n    }, 500);\n  }\n  handleVisibilityChange() {\n    const container = this.container;\n    const options = container.actualOptions;\n    this.mouseTouchFinish();\n    if (!options.pauseOnBlur) {\n      return;\n    }\n    if (document === null || document === void 0 ? void 0 : document.hidden) {\n      container.pageHidden = true;\n      container.pause();\n    } else {\n      container.pageHidden = false;\n      if (container.getAnimationStatus()) {\n        container.play(true);\n      } else {\n        container.draw();\n      }\n    }\n  }\n  mouseDown() {\n    const interactivity = this.container.interactivity;\n    if (interactivity) {\n      const mouse = interactivity.mouse;\n      mouse.clicking = true;\n      mouse.downPosition = mouse.position;\n    }\n  }\n  mouseTouchMove(e) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const container = this.container;\n    const options = container.actualOptions;\n    if (((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element) === undefined) {\n      return;\n    }\n    container.interactivity.mouse.inside = true;\n    let pos;\n    const canvas = container.canvas.element;\n    if (e.type.startsWith(\"mouse\")) {\n      this.canPush = true;\n      const mouseEvent = e;\n      if (container.interactivity.element === window) {\n        if (canvas) {\n          const clientRect = canvas.getBoundingClientRect();\n          pos = {\n            x: mouseEvent.clientX - clientRect.left,\n            y: mouseEvent.clientY - clientRect.top\n          };\n        }\n      } else if (options.interactivity.detectsOn === Enums_1.InteractivityDetect.parent) {\n        const source = mouseEvent.target;\n        const target = mouseEvent.currentTarget;\n        const canvasEl = container.canvas.element;\n        if (source && target && canvasEl) {\n          const sourceRect = source.getBoundingClientRect();\n          const targetRect = target.getBoundingClientRect();\n          const canvasRect = canvasEl.getBoundingClientRect();\n          pos = {\n            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top)\n          };\n        } else {\n          pos = {\n            x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n            y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY\n          };\n        }\n      } else {\n        if (mouseEvent.target === container.canvas.element) {\n          pos = {\n            x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n            y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY\n          };\n        }\n      }\n    } else {\n      this.canPush = e.type !== \"touchmove\";\n      const touchEvent = e;\n      const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n      const canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n      pos = {\n        x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n        y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0)\n      };\n    }\n    const pxRatio = container.retina.pixelRatio;\n    if (pos) {\n      pos.x *= pxRatio;\n      pos.y *= pxRatio;\n    }\n    container.interactivity.mouse.position = pos;\n    container.interactivity.status = Constants_1.Constants.mouseMoveEvent;\n  }\n  mouseTouchFinish() {\n    const interactivity = this.container.interactivity;\n    if (interactivity === undefined) {\n      return;\n    }\n    const mouse = interactivity.mouse;\n    delete mouse.position;\n    delete mouse.clickPosition;\n    delete mouse.downPosition;\n    interactivity.status = Constants_1.Constants.mouseLeaveEvent;\n    mouse.inside = false;\n    mouse.clicking = false;\n  }\n  mouseTouchClick(e) {\n    const container = this.container;\n    const options = container.actualOptions;\n    const mouse = container.interactivity.mouse;\n    mouse.inside = true;\n    let handled = false;\n    const mousePosition = mouse.position;\n    if (mousePosition === undefined || !options.interactivity.events.onClick.enable) {\n      return;\n    }\n    for (const [, plugin] of container.plugins) {\n      if (plugin.clickPositionValid !== undefined) {\n        handled = plugin.clickPositionValid(mousePosition);\n        if (handled) {\n          break;\n        }\n      }\n    }\n    if (!handled) {\n      this.doMouseTouchClick(e);\n    }\n    mouse.clicking = false;\n  }\n  doMouseTouchClick(e) {\n    const container = this.container;\n    const options = container.actualOptions;\n    if (this.canPush) {\n      const mousePos = container.interactivity.mouse.position;\n      if (mousePos) {\n        container.interactivity.mouse.clickPosition = {\n          x: mousePos.x,\n          y: mousePos.y\n        };\n      } else {\n        return;\n      }\n      container.interactivity.mouse.clickTime = new Date().getTime();\n      const onClick = options.interactivity.events.onClick;\n      if (onClick.mode instanceof Array) {\n        for (const mode of onClick.mode) {\n          this.handleClickMode(mode);\n        }\n      } else {\n        this.handleClickMode(onClick.mode);\n      }\n    }\n    if (e.type === \"touchend\") {\n      setTimeout(() => this.mouseTouchFinish(), 500);\n    }\n  }\n  handleClickMode(mode) {\n    const container = this.container;\n    const options = container.actualOptions;\n    const pushNb = options.interactivity.modes.push.quantity;\n    const removeNb = options.interactivity.modes.remove.quantity;\n    switch (mode) {\n      case Enums_1.ClickMode.push:\n        {\n          if (pushNb > 0) {\n            container.particles.push(pushNb, container.interactivity.mouse);\n          }\n          break;\n        }\n      case Enums_1.ClickMode.remove:\n        container.particles.removeQuantity(removeNb);\n        break;\n      case Enums_1.ClickMode.bubble:\n        container.bubble.clicking = true;\n        break;\n      case Enums_1.ClickMode.repulse:\n        container.repulse.clicking = true;\n        container.repulse.count = 0;\n        for (const particle of container.repulse.particles) {\n          particle.velocity.setTo(particle.initialVelocity);\n        }\n        container.repulse.particles = [];\n        container.repulse.finish = false;\n        setTimeout(() => {\n          if (!container.destroyed) {\n            container.repulse.clicking = false;\n          }\n        }, options.interactivity.modes.repulse.duration * 1000);\n        break;\n      case Enums_1.ClickMode.attract:\n        container.attract.clicking = true;\n        container.attract.count = 0;\n        for (const particle of container.attract.particles) {\n          particle.velocity.setTo(particle.initialVelocity);\n        }\n        container.attract.particles = [];\n        container.attract.finish = false;\n        setTimeout(() => {\n          if (!container.destroyed) {\n            container.attract.clicking = false;\n          }\n        }, options.interactivity.modes.attract.duration * 1000);\n        break;\n      case Enums_1.ClickMode.pause:\n        if (container.getAnimationStatus()) {\n          container.pause();\n        } else {\n          container.play();\n        }\n        break;\n    }\n    for (const [, plugin] of container.plugins) {\n      if (plugin.handleClickMode) {\n        plugin.handleClickMode(mode);\n      }\n    }\n  }\n}\nexports.EventListeners = EventListeners;","map":{"version":3,"names":["Object","defineProperty","exports","value","EventListeners","Enums_1","require","Constants_1","manageListener","element","event","handler","add","options","addOptions","passive","capture","undefined","addEventListener","removeOptions","removeEventListener","constructor","container","canPush","mouseMoveHandler","e","mouseTouchMove","touchStartHandler","touchMoveHandler","touchEndHandler","mouseTouchFinish","mouseLeaveHandler","touchCancelHandler","touchEndClickHandler","mouseTouchClick","mouseUpHandler","mouseDownHandler","mouseDown","visibilityChangeHandler","handleVisibilityChange","resizeHandler","handleWindowResize","addListeners","manageListeners","removeListeners","_a","actualOptions","detectType","interactivity","detectsOn","mouseLeaveEvent","Constants","InteractivityDetect","window","mouseOutEvent","parent","canvas","canvasEl","parentElement","parentNode","interactivityEl","html","events","onHover","enable","onClick","mouseMoveEvent","touchStartEvent","touchMoveEvent","touchEndEvent","mouseUpEvent","mouseDownEvent","touchCancelEvent","style","pointerEvents","resize","resizeEvent","document","visibilityChangeEvent","resizeTimeout","clearTimeout","setTimeout","windowResize","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","draw","mouse","clicking","downPosition","position","_b","_c","_d","_e","_f","_g","inside","pos","type","startsWith","mouseEvent","clientRect","getBoundingClientRect","x","clientX","left","y","clientY","top","source","target","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","length","pxRatio","retina","pixelRatio","status","clickPosition","handled","mousePosition","plugin","plugins","clickPositionValid","doMouseTouchClick","mousePos","clickTime","Date","getTime","mode","Array","handleClickMode","pushNb","modes","push","quantity","removeNb","remove","ClickMode","particles","removeQuantity","bubble","repulse","count","particle","velocity","setTo","initialVelocity","finish","destroyed","duration","attract"],"sources":["H:/React Website/node_modules/tsparticles/Utils/EventListeners.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventListeners = void 0;\nconst Enums_1 = require(\"../Enums\");\nconst Constants_1 = require(\"./Constants\");\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (typeof options === \"boolean\") {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nclass EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.mouseMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchStartHandler = (e) => this.mouseTouchMove(e);\n        this.touchMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchEndHandler = () => this.mouseTouchFinish();\n        this.mouseLeaveHandler = () => this.mouseTouchFinish();\n        this.touchCancelHandler = () => this.mouseTouchFinish();\n        this.touchEndClickHandler = (e) => this.mouseTouchClick(e);\n        this.mouseUpHandler = (e) => this.mouseTouchClick(e);\n        this.mouseDownHandler = () => this.mouseDown();\n        this.visibilityChangeHandler = () => this.handleVisibilityChange();\n        this.resizeHandler = () => this.handleWindowResize();\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    manageListeners(add) {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        const detectType = options.interactivity.detectsOn;\n        let mouseLeaveEvent = Constants_1.Constants.mouseLeaveEvent;\n        if (detectType === Enums_1.InteractivityDetect.window) {\n            container.interactivity.element = window;\n            mouseLeaveEvent = Constants_1.Constants.mouseOutEvent;\n        }\n        else if (detectType === Enums_1.InteractivityDetect.parent && container.canvas.element) {\n            const canvasEl = container.canvas.element;\n            container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const interactivityEl = container.interactivity.element;\n        if (!interactivityEl) {\n            return;\n        }\n        const html = interactivityEl;\n        if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n            manageListener(interactivityEl, Constants_1.Constants.mouseMoveEvent, this.mouseMoveHandler, add);\n            manageListener(interactivityEl, Constants_1.Constants.touchStartEvent, this.touchStartHandler, add);\n            manageListener(interactivityEl, Constants_1.Constants.touchMoveEvent, this.touchMoveHandler, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndHandler, add);\n            }\n            else {\n                manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndClickHandler, add);\n                manageListener(interactivityEl, Constants_1.Constants.mouseUpEvent, this.mouseUpHandler, add);\n                manageListener(interactivityEl, Constants_1.Constants.mouseDownEvent, this.mouseDownHandler, add);\n            }\n            manageListener(interactivityEl, mouseLeaveEvent, this.mouseLeaveHandler, add);\n            manageListener(interactivityEl, Constants_1.Constants.touchCancelEvent, this.touchCancelHandler, add);\n        }\n        if (container.canvas.element) {\n            container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n        }\n        if (options.interactivity.events.resize) {\n            manageListener(window, Constants_1.Constants.resizeEvent, this.resizeHandler, add);\n        }\n        if (document) {\n            manageListener(document, Constants_1.Constants.visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n        }\n    }\n    handleWindowResize() {\n        if (this.resizeTimeout) {\n            clearTimeout(this.resizeTimeout);\n            delete this.resizeTimeout;\n        }\n        this.resizeTimeout = setTimeout(() => { var _a; return (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize(); }, 500);\n    }\n    handleVisibilityChange() {\n        const container = this.container;\n        const options = container.actualOptions;\n        this.mouseTouchFinish();\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            if (container.getAnimationStatus()) {\n                container.play(true);\n            }\n            else {\n                container.draw();\n            }\n        }\n    }\n    mouseDown() {\n        const interactivity = this.container.interactivity;\n        if (interactivity) {\n            const mouse = interactivity.mouse;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        }\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const container = this.container;\n        const options = container.actualOptions;\n        if (((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element) === undefined) {\n            return;\n        }\n        container.interactivity.mouse.inside = true;\n        let pos;\n        const canvas = container.canvas.element;\n        if (e.type.startsWith(\"mouse\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (container.interactivity.element === window) {\n                if (canvas) {\n                    const clientRect = canvas.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.clientX - clientRect.left,\n                        y: mouseEvent.clientY - clientRect.top,\n                    };\n                }\n            }\n            else if (options.interactivity.detectsOn === Enums_1.InteractivityDetect.parent) {\n                const source = mouseEvent.target;\n                const target = mouseEvent.currentTarget;\n                const canvasEl = container.canvas.element;\n                if (source && target && canvasEl) {\n                    const sourceRect = source.getBoundingClientRect();\n                    const targetRect = target.getBoundingClientRect();\n                    const canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                        y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                    };\n                }\n                else {\n                    pos = {\n                        x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n                        y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                if (mouseEvent.target === container.canvas.element) {\n                    pos = {\n                        x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n                        y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY,\n                    };\n                }\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e;\n            const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n            const canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n                y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0),\n            };\n        }\n        const pxRatio = container.retina.pixelRatio;\n        if (pos) {\n            pos.x *= pxRatio;\n            pos.y *= pxRatio;\n        }\n        container.interactivity.mouse.position = pos;\n        container.interactivity.status = Constants_1.Constants.mouseMoveEvent;\n    }\n    mouseTouchFinish() {\n        const interactivity = this.container.interactivity;\n        if (interactivity === undefined) {\n            return;\n        }\n        const mouse = interactivity.mouse;\n        delete mouse.position;\n        delete mouse.clickPosition;\n        delete mouse.downPosition;\n        interactivity.status = Constants_1.Constants.mouseLeaveEvent;\n        mouse.inside = false;\n        mouse.clicking = false;\n    }\n    mouseTouchClick(e) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouse = container.interactivity.mouse;\n        mouse.inside = true;\n        let handled = false;\n        const mousePosition = mouse.position;\n        if (mousePosition === undefined || !options.interactivity.events.onClick.enable) {\n            return;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.clickPositionValid !== undefined) {\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n        }\n        if (!handled) {\n            this.doMouseTouchClick(e);\n        }\n        mouse.clicking = false;\n    }\n    doMouseTouchClick(e) {\n        const container = this.container;\n        const options = container.actualOptions;\n        if (this.canPush) {\n            const mousePos = container.interactivity.mouse.position;\n            if (mousePos) {\n                container.interactivity.mouse.clickPosition = {\n                    x: mousePos.x,\n                    y: mousePos.y,\n                };\n            }\n            else {\n                return;\n            }\n            container.interactivity.mouse.clickTime = new Date().getTime();\n            const onClick = options.interactivity.events.onClick;\n            if (onClick.mode instanceof Array) {\n                for (const mode of onClick.mode) {\n                    this.handleClickMode(mode);\n                }\n            }\n            else {\n                this.handleClickMode(onClick.mode);\n            }\n        }\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const pushNb = options.interactivity.modes.push.quantity;\n        const removeNb = options.interactivity.modes.remove.quantity;\n        switch (mode) {\n            case Enums_1.ClickMode.push: {\n                if (pushNb > 0) {\n                    container.particles.push(pushNb, container.interactivity.mouse);\n                }\n                break;\n            }\n            case Enums_1.ClickMode.remove:\n                container.particles.removeQuantity(removeNb);\n                break;\n            case Enums_1.ClickMode.bubble:\n                container.bubble.clicking = true;\n                break;\n            case Enums_1.ClickMode.repulse:\n                container.repulse.clicking = true;\n                container.repulse.count = 0;\n                for (const particle of container.repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                container.repulse.particles = [];\n                container.repulse.finish = false;\n                setTimeout(() => {\n                    if (!container.destroyed) {\n                        container.repulse.clicking = false;\n                    }\n                }, options.interactivity.modes.repulse.duration * 1000);\n                break;\n            case Enums_1.ClickMode.attract:\n                container.attract.clicking = true;\n                container.attract.count = 0;\n                for (const particle of container.attract.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                container.attract.particles = [];\n                container.attract.finish = false;\n                setTimeout(() => {\n                    if (!container.destroyed) {\n                        container.attract.clicking = false;\n                    }\n                }, options.interactivity.modes.attract.duration * 1000);\n                break;\n            case Enums_1.ClickMode.pause:\n                if (container.getAnimationStatus()) {\n                    container.pause();\n                }\n                else {\n                    container.play();\n                }\n                break;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.handleClickMode) {\n                plugin.handleClickMode(mode);\n            }\n        }\n    }\n}\nexports.EventListeners = EventListeners;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}