{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FrameManager = void 0;\nclass FrameManager {\n  constructor(container) {\n    this.container = container;\n  }\n  nextFrame(timestamp) {\n    try {\n      const container = this.container;\n      if (container.lastFrameTime !== undefined && timestamp < container.lastFrameTime + 1000 / container.fpsLimit) {\n        container.draw();\n        return;\n      }\n      const deltaValue = timestamp - container.lastFrameTime;\n      const delta = {\n        value: deltaValue,\n        factor: 60 * deltaValue / 1000\n      };\n      container.lastFrameTime = timestamp;\n      container.particles.draw(delta);\n      if (container.getAnimationStatus()) {\n        container.draw();\n      }\n    } catch (e) {\n      console.error(\"tsParticles error in animation loop\", e);\n    }\n  }\n}\nexports.FrameManager = FrameManager;","map":{"version":3,"names":["Object","defineProperty","exports","value","FrameManager","constructor","container","nextFrame","timestamp","lastFrameTime","undefined","fpsLimit","draw","deltaValue","delta","factor","particles","getAnimationStatus","e","console","error"],"sources":["C:/Users/rakib/Capstone2/rakibulll.github.io/node_modules/tsparticles/Core/FrameManager.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FrameManager = void 0;\nclass FrameManager {\n    constructor(container) {\n        this.container = container;\n    }\n    nextFrame(timestamp) {\n        try {\n            const container = this.container;\n            if (container.lastFrameTime !== undefined &&\n                timestamp < container.lastFrameTime + 1000 / container.fpsLimit) {\n                container.draw();\n                return;\n            }\n            const deltaValue = timestamp - container.lastFrameTime;\n            const delta = {\n                value: deltaValue,\n                factor: (60 * deltaValue) / 1000,\n            };\n            container.lastFrameTime = timestamp;\n            container.particles.draw(delta);\n            if (container.getAnimationStatus()) {\n                container.draw();\n            }\n        }\n        catch (e) {\n            console.error(\"tsParticles error in animation loop\", e);\n        }\n    }\n}\nexports.FrameManager = FrameManager;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,MAAMA,YAAY,CAAC;EACfC,WAAWA,CAACC,SAAS,EAAE;IACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;EAC9B;EACAC,SAASA,CAACC,SAAS,EAAE;IACjB,IAAI;MACA,MAAMF,SAAS,GAAG,IAAI,CAACA,SAAS;MAChC,IAAIA,SAAS,CAACG,aAAa,KAAKC,SAAS,IACrCF,SAAS,GAAGF,SAAS,CAACG,aAAa,GAAG,IAAI,GAAGH,SAAS,CAACK,QAAQ,EAAE;QACjEL,SAAS,CAACM,IAAI,EAAE;QAChB;MACJ;MACA,MAAMC,UAAU,GAAGL,SAAS,GAAGF,SAAS,CAACG,aAAa;MACtD,MAAMK,KAAK,GAAG;QACVX,KAAK,EAAEU,UAAU;QACjBE,MAAM,EAAG,EAAE,GAAGF,UAAU,GAAI;MAChC,CAAC;MACDP,SAAS,CAACG,aAAa,GAAGD,SAAS;MACnCF,SAAS,CAACU,SAAS,CAACJ,IAAI,CAACE,KAAK,CAAC;MAC/B,IAAIR,SAAS,CAACW,kBAAkB,EAAE,EAAE;QAChCX,SAAS,CAACM,IAAI,EAAE;MACpB;IACJ,CAAC,CACD,OAAOM,CAAC,EAAE;MACNC,OAAO,CAACC,KAAK,CAAC,qCAAqC,EAAEF,CAAC,CAAC;IAC3D;EACJ;AACJ;AACAhB,OAAO,CAACE,YAAY,GAAGA,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}