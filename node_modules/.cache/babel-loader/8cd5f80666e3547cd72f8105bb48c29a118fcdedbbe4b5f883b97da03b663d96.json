{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Lighter = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Modes_1 = require(\"../../Enums/Modes\");\nclass Lighter {\n  constructor(container) {\n    this.container = container;\n  }\n  interact(particle) {\n    const container = this.container;\n    const options = container.actualOptions;\n    if (options.interactivity.events.onHover.enable && container.interactivity.status === \"mousemove\") {\n      const mousePos = this.container.interactivity.mouse.position;\n      if (mousePos) {\n        container.canvas.drawParticleShadow(particle, mousePos);\n      }\n    }\n  }\n  isEnabled() {\n    const container = this.container;\n    const mouse = container.interactivity.mouse;\n    const events = container.actualOptions.interactivity.events;\n    if (!(events.onHover.enable && mouse.position)) {\n      return false;\n    }\n    const hoverMode = events.onHover.mode;\n    return Utils_1.Utils.isInArray(Modes_1.HoverMode.light, hoverMode);\n  }\n  reset() {}\n}\nexports.Lighter = Lighter;","map":{"version":3,"names":["Object","defineProperty","exports","value","Lighter","Utils_1","require","Modes_1","constructor","container","interact","particle","options","actualOptions","interactivity","events","onHover","enable","status","mousePos","mouse","position","canvas","drawParticleShadow","isEnabled","hoverMode","mode","Utils","isInArray","HoverMode","light","reset"],"sources":["C:/Users/rakib/Capstone2/rakibulll.github.io/node_modules/tsparticles/Interactions/Particles/Lighter.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Lighter = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Modes_1 = require(\"../../Enums/Modes\");\nclass Lighter {\n    constructor(container) {\n        this.container = container;\n    }\n    interact(particle) {\n        const container = this.container;\n        const options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"mousemove\") {\n            const mousePos = this.container.interactivity.mouse.position;\n            if (mousePos) {\n                container.canvas.drawParticleShadow(particle, mousePos);\n            }\n        }\n    }\n    isEnabled() {\n        const container = this.container;\n        const mouse = container.interactivity.mouse;\n        const events = container.actualOptions.interactivity.events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        return Utils_1.Utils.isInArray(Modes_1.HoverMode.light, hoverMode);\n    }\n    reset() {\n    }\n}\nexports.Lighter = Lighter;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,MAAMC,OAAO,GAAGC,OAAO,CAAC,aAAa,CAAC;AACtC,MAAMC,OAAO,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAC5C,MAAMF,OAAO,CAAC;EACVI,WAAWA,CAACC,SAAS,EAAE;IACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;EAC9B;EACAC,QAAQA,CAACC,QAAQ,EAAE;IACf,MAAMF,SAAS,GAAG,IAAI,CAACA,SAAS;IAChC,MAAMG,OAAO,GAAGH,SAAS,CAACI,aAAa;IACvC,IAAID,OAAO,CAACE,aAAa,CAACC,MAAM,CAACC,OAAO,CAACC,MAAM,IAAIR,SAAS,CAACK,aAAa,CAACI,MAAM,KAAK,WAAW,EAAE;MAC/F,MAAMC,QAAQ,GAAG,IAAI,CAACV,SAAS,CAACK,aAAa,CAACM,KAAK,CAACC,QAAQ;MAC5D,IAAIF,QAAQ,EAAE;QACVV,SAAS,CAACa,MAAM,CAACC,kBAAkB,CAACZ,QAAQ,EAAEQ,QAAQ,CAAC;MAC3D;IACJ;EACJ;EACAK,SAASA,CAAA,EAAG;IACR,MAAMf,SAAS,GAAG,IAAI,CAACA,SAAS;IAChC,MAAMW,KAAK,GAAGX,SAAS,CAACK,aAAa,CAACM,KAAK;IAC3C,MAAML,MAAM,GAAGN,SAAS,CAACI,aAAa,CAACC,aAAa,CAACC,MAAM;IAC3D,IAAI,EAAEA,MAAM,CAACC,OAAO,CAACC,MAAM,IAAIG,KAAK,CAACC,QAAQ,CAAC,EAAE;MAC5C,OAAO,KAAK;IAChB;IACA,MAAMI,SAAS,GAAGV,MAAM,CAACC,OAAO,CAACU,IAAI;IACrC,OAAOrB,OAAO,CAACsB,KAAK,CAACC,SAAS,CAACrB,OAAO,CAACsB,SAAS,CAACC,KAAK,EAAEL,SAAS,CAAC;EACtE;EACAM,KAAKA,CAAA,EAAG,CACR;AACJ;AACA7B,OAAO,CAACE,OAAO,GAAGA,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}