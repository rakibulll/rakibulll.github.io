{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Canvas = void 0;\nconst Utils_1 = require(\"../Utils\");\nclass Canvas {\n  constructor(container) {\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this.context = null;\n    this.generatedCanvas = false;\n  }\n  init() {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n    const options = this.container.actualOptions;\n    const element = this.element;\n    if (element) {\n      if (options.fullScreen.enable) {\n        this.originalStyle = Utils_1.Utils.deepExtend({}, element.style);\n        element.style.position = \"fixed\";\n        element.style.zIndex = options.fullScreen.zIndex.toString(10);\n        element.style.top = \"0\";\n        element.style.left = \"0\";\n        element.style.width = \"100%\";\n        element.style.height = \"100%\";\n      } else {\n        element.style.position = (_b = (_a = this.originalStyle) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : \"\";\n        element.style.zIndex = (_d = (_c = this.originalStyle) === null || _c === void 0 ? void 0 : _c.zIndex) !== null && _d !== void 0 ? _d : \"\";\n        element.style.top = (_f = (_e = this.originalStyle) === null || _e === void 0 ? void 0 : _e.top) !== null && _f !== void 0 ? _f : \"\";\n        element.style.left = (_h = (_g = this.originalStyle) === null || _g === void 0 ? void 0 : _g.left) !== null && _h !== void 0 ? _h : \"\";\n        element.style.width = (_k = (_j = this.originalStyle) === null || _j === void 0 ? void 0 : _j.width) !== null && _k !== void 0 ? _k : \"\";\n        element.style.height = (_m = (_l = this.originalStyle) === null || _l === void 0 ? void 0 : _l.height) !== null && _m !== void 0 ? _m : \"\";\n      }\n    }\n    this.resize();\n    const cover = options.backgroundMask.cover;\n    const color = cover.color;\n    const trail = options.particles.move.trail;\n    const coverRgb = Utils_1.ColorUtils.colorToRgb(color);\n    this.coverColor = coverRgb !== undefined ? {\n      r: coverRgb.r,\n      g: coverRgb.g,\n      b: coverRgb.b,\n      a: cover.opacity\n    } : undefined;\n    this.trailFillColor = Utils_1.ColorUtils.colorToRgb(trail.fillColor);\n    this.initBackground();\n    this.paint();\n  }\n  loadCanvas(canvas, generatedCanvas) {\n    var _a;\n    if (!canvas.className) {\n      canvas.className = Utils_1.Constants.canvasClass;\n    }\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n    this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n    this.element = canvas;\n    this.originalStyle = Utils_1.Utils.deepExtend({}, this.element.style);\n    this.size.height = canvas.offsetHeight;\n    this.size.width = canvas.offsetWidth;\n    this.context = this.element.getContext(\"2d\");\n    this.container.retina.init();\n    this.initBackground();\n  }\n  destroy() {\n    var _a;\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n    if (this.context) {\n      Utils_1.CanvasUtils.clear(this.context, this.size);\n    }\n  }\n  paint() {\n    const options = this.container.actualOptions;\n    if (!this.context) {\n      return;\n    }\n    if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n      Utils_1.CanvasUtils.clear(this.context, this.size);\n      this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.coverColor, this.coverColor.a));\n    } else {\n      this.paintBase();\n    }\n  }\n  clear() {\n    const options = this.container.actualOptions;\n    const trail = options.particles.move.trail;\n    if (options.backgroundMask.enable) {\n      this.paint();\n    } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n      this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n    } else if (this.context) {\n      Utils_1.CanvasUtils.clear(this.context, this.size);\n    }\n  }\n  windowResize() {\n    if (!this.element) {\n      return;\n    }\n    const container = this.container;\n    this.resize();\n    container.actualOptions.setResponsive(this.size.width, container.retina.pixelRatio, container.options);\n    container.particles.setDensity();\n    for (const [, plugin] of container.plugins) {\n      if (plugin.resize !== undefined) {\n        plugin.resize();\n      }\n    }\n  }\n  resize() {\n    if (!this.element) {\n      return;\n    }\n    const container = this.container;\n    const pxRatio = container.retina.pixelRatio;\n    const size = container.canvas.size;\n    const oldSize = {\n      width: size.width,\n      height: size.height\n    };\n    size.width = this.element.offsetWidth * pxRatio;\n    size.height = this.element.offsetHeight * pxRatio;\n    this.element.width = size.width;\n    this.element.height = size.height;\n    if (this.container.started) {\n      this.resizeFactor = {\n        width: size.width / oldSize.width,\n        height: size.height / oldSize.height\n      };\n    }\n  }\n  drawConnectLine(p1, p2) {\n    var _a;\n    const ctx = this.context;\n    if (!ctx) {\n      return;\n    }\n    const lineStyle = this.lineStyle(p1, p2);\n    if (!lineStyle) {\n      return;\n    }\n    const pos1 = p1.getPosition();\n    const pos2 = p2.getPosition();\n    Utils_1.CanvasUtils.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n  }\n  drawGrabLine(particle, lineColor, opacity, mousePos) {\n    var _a;\n    const container = this.container;\n    const ctx = container.canvas.context;\n    if (!ctx) {\n      return;\n    }\n    const beginPos = particle.getPosition();\n    Utils_1.CanvasUtils.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n  }\n  drawParticleShadow(particle, mousePos) {\n    if (!this.context) {\n      return;\n    }\n    Utils_1.CanvasUtils.drawParticleShadow(this.container, this.context, particle, mousePos);\n  }\n  drawLinkTriangle(p1, link1, link2) {\n    var _a;\n    const container = this.container;\n    const options = container.actualOptions;\n    const p2 = link1.destination;\n    const p3 = link2.destination;\n    const triangleOptions = p1.options.links.triangles;\n    const opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n    if (opacityTriangle <= 0) {\n      return;\n    }\n    const pos1 = p1.getPosition();\n    const pos2 = p2.getPosition();\n    const pos3 = p3.getPosition();\n    const ctx = this.context;\n    if (!ctx) {\n      return;\n    }\n    if (Utils_1.NumberUtils.getDistance(pos1, pos2) > container.retina.linksDistance || Utils_1.NumberUtils.getDistance(pos3, pos2) > container.retina.linksDistance || Utils_1.NumberUtils.getDistance(pos3, pos1) > container.retina.linksDistance) {\n      return;\n    }\n    let colorTriangle = Utils_1.ColorUtils.colorToRgb(triangleOptions.color);\n    if (!colorTriangle) {\n      const linksOptions = p1.options.links;\n      const linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n      colorTriangle = Utils_1.ColorUtils.getLinkColor(p1, p2, linkColor);\n    }\n    if (!colorTriangle) {\n      return;\n    }\n    Utils_1.CanvasUtils.drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n  }\n  drawLinkLine(p1, link) {\n    var _a, _b;\n    const container = this.container;\n    const options = container.actualOptions;\n    const p2 = link.destination;\n    let opacity = link.opacity;\n    const pos1 = p1.getPosition();\n    const pos2 = p2.getPosition();\n    const ctx = this.context;\n    if (!ctx) {\n      return;\n    }\n    let colorLine;\n    const twinkle = p1.options.twinkle.lines;\n    if (twinkle.enable) {\n      const twinkleFreq = twinkle.frequency;\n      const twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n      const twinkling = Math.random() < twinkleFreq;\n      if (twinkling && twinkleRgb !== undefined) {\n        colorLine = twinkleRgb;\n        opacity = twinkle.opacity;\n      }\n    }\n    if (!colorLine) {\n      const linksOptions = p1.options.links;\n      const linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n      colorLine = Utils_1.ColorUtils.getLinkColor(p1, p2, linkColor);\n    }\n    if (!colorLine) {\n      return;\n    }\n    const width = (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n    const maxDistance = (_b = p1.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n    Utils_1.CanvasUtils.drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n  }\n  drawParticle(particle, delta) {\n    var _a, _b, _c, _d;\n    if (((_a = particle.image) === null || _a === void 0 ? void 0 : _a.loaded) === false || particle.spawning || particle.destroyed) {\n      return;\n    }\n    const pfColor = particle.getFillColor();\n    const psColor = (_b = particle.getStrokeColor()) !== null && _b !== void 0 ? _b : pfColor;\n    if (!pfColor && !psColor) {\n      return;\n    }\n    const options = this.container.actualOptions;\n    const pOptions = particle.options;\n    const twinkle = pOptions.twinkle.particles;\n    const twinkleFreq = twinkle.frequency;\n    const twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n    const twinkling = twinkle.enable && Math.random() < twinkleFreq;\n    const radius = particle.getRadius();\n    const opacity = twinkling ? twinkle.opacity : (_c = particle.bubble.opacity) !== null && _c !== void 0 ? _c : particle.opacity.value;\n    const infectionStage = particle.infecter.infectionStage;\n    const infection = options.infection;\n    const infectionStages = infection.stages;\n    const infectionColor = infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n    const infectionRgb = Utils_1.ColorUtils.colorToRgb(infectionColor);\n    const fColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : pfColor ? Utils_1.ColorUtils.hslToRgb(pfColor) : undefined;\n    const sColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : psColor ? Utils_1.ColorUtils.hslToRgb(psColor) : undefined;\n    const fillColorValue = fColor !== undefined ? Utils_1.ColorUtils.getStyleFromRgb(fColor, opacity) : undefined;\n    if (!this.context || !fillColorValue && !sColor) {\n      return;\n    }\n    const strokeColorValue = sColor !== undefined ? Utils_1.ColorUtils.getStyleFromRgb(sColor, (_d = particle.stroke.opacity) !== null && _d !== void 0 ? _d : opacity) : fillColorValue;\n    this.drawParticleLinks(particle);\n    if (radius > 0) {\n      Utils_1.CanvasUtils.drawParticle(this.container, this.context, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius, opacity, particle.options.shadow);\n    }\n  }\n  drawParticleLinks(particle) {\n    if (!this.context) {\n      return;\n    }\n    const container = this.container;\n    const particles = container.particles;\n    const pOptions = particle.options;\n    if (particle.links.length > 0) {\n      this.context.save();\n      const p1Links = particle.links.filter(l => {\n        const linkFreq = container.particles.getLinkFrequency(particle, l.destination);\n        return linkFreq <= pOptions.links.frequency;\n      });\n      for (const link of p1Links) {\n        const p2 = link.destination;\n        if (pOptions.links.triangles.enable) {\n          const links = p1Links.map(l => l.destination);\n          const vertices = p2.links.filter(t => {\n            const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n            return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n          });\n          if (vertices.length) {\n            for (const vertex of vertices) {\n              const p3 = vertex.destination;\n              const triangleFreq = particles.getTriangleFrequency(particle, p2, p3);\n              if (triangleFreq > pOptions.links.triangles.frequency) {\n                continue;\n              }\n              this.drawLinkTriangle(particle, link, vertex);\n            }\n          }\n        }\n        if (link.opacity > 0 && container.retina.linksWidth > 0) {\n          this.drawLinkLine(particle, link);\n        }\n      }\n      this.context.restore();\n    }\n  }\n  drawPlugin(plugin, delta) {\n    if (!this.context) {\n      return;\n    }\n    Utils_1.CanvasUtils.drawPlugin(this.context, plugin, delta);\n  }\n  drawLight(mousePos) {\n    if (!this.context) {\n      return;\n    }\n    Utils_1.CanvasUtils.drawLight(this.container, this.context, mousePos);\n  }\n  initBackground() {\n    const options = this.container.actualOptions;\n    const background = options.background;\n    const element = this.element;\n    const elementStyle = element === null || element === void 0 ? void 0 : element.style;\n    if (!elementStyle) {\n      return;\n    }\n    if (background.color) {\n      const color = Utils_1.ColorUtils.colorToRgb(background.color);\n      elementStyle.backgroundColor = color ? Utils_1.ColorUtils.getStyleFromRgb(color, background.opacity) : \"\";\n    } else {\n      elementStyle.backgroundColor = \"\";\n    }\n    elementStyle.backgroundImage = background.image || \"\";\n    elementStyle.backgroundPosition = background.position || \"\";\n    elementStyle.backgroundRepeat = background.repeat || \"\";\n    elementStyle.backgroundSize = background.size || \"\";\n  }\n  paintBase(baseColor) {\n    if (!this.context) {\n      return;\n    }\n    Utils_1.CanvasUtils.paintBase(this.context, this.size, baseColor);\n  }\n  lineStyle(p1, p2) {\n    if (!this.context) {\n      return;\n    }\n    const options = this.container.actualOptions;\n    const connectOptions = options.interactivity.modes.connect;\n    return Utils_1.CanvasUtils.gradient(this.context, p1, p2, connectOptions.links.opacity);\n  }\n}\nexports.Canvas = Canvas;","map":{"version":3,"names":["Object","defineProperty","exports","value","Canvas","Utils_1","require","constructor","container","size","height","width","context","generatedCanvas","init","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","options","actualOptions","element","fullScreen","enable","originalStyle","Utils","deepExtend","style","position","zIndex","toString","top","left","resize","cover","backgroundMask","color","trail","particles","move","coverRgb","ColorUtils","colorToRgb","coverColor","undefined","r","g","b","a","opacity","trailFillColor","fillColor","initBackground","paint","loadCanvas","canvas","className","Constants","canvasClass","remove","offsetHeight","offsetWidth","getContext","retina","destroy","CanvasUtils","clear","paintBase","getStyleFromRgb","length","windowResize","setResponsive","pixelRatio","setDensity","plugin","plugins","pxRatio","oldSize","started","resizeFactor","drawConnectLine","p1","p2","ctx","lineStyle","pos1","getPosition","pos2","linksWidth","drawGrabLine","particle","lineColor","mousePos","beginPos","drawParticleShadow","drawLinkTriangle","link1","link2","destination","p3","triangleOptions","links","triangles","opacityTriangle","pos3","NumberUtils","getDistance","linksDistance","colorTriangle","linksOptions","linkColor","id","linksColors","get","linksColor","getLinkColor","composite","drawLinkLine","link","colorLine","twinkle","lines","twinkleFreq","frequency","twinkleRgb","twinkling","Math","random","maxDistance","warp","shadow","drawParticle","delta","image","loaded","spawning","destroyed","pfColor","getFillColor","psColor","getStrokeColor","pOptions","radius","getRadius","bubble","infectionStage","infecter","infection","infectionStages","stages","infectionColor","infectionRgb","fColor","hslToRgb","sColor","fillColorValue","strokeColorValue","stroke","drawParticleLinks","save","p1Links","filter","l","linkFreq","getLinkFrequency","map","vertices","t","indexOf","vertex","triangleFreq","getTriangleFrequency","restore","drawPlugin","drawLight","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","baseColor","connectOptions","interactivity","modes","connect","gradient"],"sources":["H:/React Website/node_modules/tsparticles/Core/Canvas.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Canvas = void 0;\nconst Utils_1 = require(\"../Utils\");\nclass Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    init() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        const options = this.container.actualOptions;\n        const element = this.element;\n        if (element) {\n            if (options.fullScreen.enable) {\n                this.originalStyle = Utils_1.Utils.deepExtend({}, element.style);\n                element.style.position = \"fixed\";\n                element.style.zIndex = options.fullScreen.zIndex.toString(10);\n                element.style.top = \"0\";\n                element.style.left = \"0\";\n                element.style.width = \"100%\";\n                element.style.height = \"100%\";\n            }\n            else {\n                element.style.position = (_b = (_a = this.originalStyle) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : \"\";\n                element.style.zIndex = (_d = (_c = this.originalStyle) === null || _c === void 0 ? void 0 : _c.zIndex) !== null && _d !== void 0 ? _d : \"\";\n                element.style.top = (_f = (_e = this.originalStyle) === null || _e === void 0 ? void 0 : _e.top) !== null && _f !== void 0 ? _f : \"\";\n                element.style.left = (_h = (_g = this.originalStyle) === null || _g === void 0 ? void 0 : _g.left) !== null && _h !== void 0 ? _h : \"\";\n                element.style.width = (_k = (_j = this.originalStyle) === null || _j === void 0 ? void 0 : _j.width) !== null && _k !== void 0 ? _k : \"\";\n                element.style.height = (_m = (_l = this.originalStyle) === null || _l === void 0 ? void 0 : _l.height) !== null && _m !== void 0 ? _m : \"\";\n            }\n        }\n        this.resize();\n        const cover = options.backgroundMask.cover;\n        const color = cover.color;\n        const trail = options.particles.move.trail;\n        const coverRgb = Utils_1.ColorUtils.colorToRgb(color);\n        this.coverColor =\n            coverRgb !== undefined\n                ? {\n                    r: coverRgb.r,\n                    g: coverRgb.g,\n                    b: coverRgb.b,\n                    a: cover.opacity,\n                }\n                : undefined;\n        this.trailFillColor = Utils_1.ColorUtils.colorToRgb(trail.fillColor);\n        this.initBackground();\n        this.paint();\n    }\n    loadCanvas(canvas, generatedCanvas) {\n        var _a;\n        if (!canvas.className) {\n            canvas.className = Utils_1.Constants.canvasClass;\n        }\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = Utils_1.Utils.deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        if (this.context) {\n            Utils_1.CanvasUtils.clear(this.context, this.size);\n        }\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        if (!this.context) {\n            return;\n        }\n        if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n            Utils_1.CanvasUtils.clear(this.context, this.size);\n            this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.coverColor, this.coverColor.a));\n        }\n        else {\n            this.paintBase();\n        }\n    }\n    clear() {\n        const options = this.container.actualOptions;\n        const trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n        }\n        else if (this.context) {\n            Utils_1.CanvasUtils.clear(this.context, this.size);\n        }\n    }\n    windowResize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        this.resize();\n        container.actualOptions.setResponsive(this.size.width, container.retina.pixelRatio, container.options);\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        const pxRatio = container.retina.pixelRatio;\n        const size = container.canvas.size;\n        const oldSize = {\n            width: size.width,\n            height: size.height,\n        };\n        size.width = this.element.offsetWidth * pxRatio;\n        size.height = this.element.offsetHeight * pxRatio;\n        this.element.width = size.width;\n        this.element.height = size.height;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    drawConnectLine(p1, p2) {\n        var _a;\n        const ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        const lineStyle = this.lineStyle(p1, p2);\n        if (!lineStyle) {\n            return;\n        }\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        Utils_1.CanvasUtils.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n    }\n    drawGrabLine(particle, lineColor, opacity, mousePos) {\n        var _a;\n        const container = this.container;\n        const ctx = container.canvas.context;\n        if (!ctx) {\n            return;\n        }\n        const beginPos = particle.getPosition();\n        Utils_1.CanvasUtils.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n    }\n    drawParticleShadow(particle, mousePos) {\n        if (!this.context) {\n            return;\n        }\n        Utils_1.CanvasUtils.drawParticleShadow(this.container, this.context, particle, mousePos);\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link1.destination;\n        const p3 = link2.destination;\n        const triangleOptions = p1.options.links.triangles;\n        const opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        const pos3 = p3.getPosition();\n        const ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        if (Utils_1.NumberUtils.getDistance(pos1, pos2) > container.retina.linksDistance ||\n            Utils_1.NumberUtils.getDistance(pos3, pos2) > container.retina.linksDistance ||\n            Utils_1.NumberUtils.getDistance(pos3, pos1) > container.retina.linksDistance) {\n            return;\n        }\n        let colorTriangle = Utils_1.ColorUtils.colorToRgb(triangleOptions.color);\n        if (!colorTriangle) {\n            const linksOptions = p1.options.links;\n            const linkColor = linksOptions.id !== undefined\n                ? container.particles.linksColors.get(linksOptions.id)\n                : container.particles.linksColor;\n            colorTriangle = Utils_1.ColorUtils.getLinkColor(p1, p2, linkColor);\n        }\n        if (!colorTriangle) {\n            return;\n        }\n        Utils_1.CanvasUtils.drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n    }\n    drawLinkLine(p1, link) {\n        var _a, _b;\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link.destination;\n        let opacity = link.opacity;\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        const ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        let colorLine;\n        const twinkle = p1.options.twinkle.lines;\n        if (twinkle.enable) {\n            const twinkleFreq = twinkle.frequency;\n            const twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n            const twinkling = Math.random() < twinkleFreq;\n            if (twinkling && twinkleRgb !== undefined) {\n                colorLine = twinkleRgb;\n                opacity = twinkle.opacity;\n            }\n        }\n        if (!colorLine) {\n            const linksOptions = p1.options.links;\n            const linkColor = linksOptions.id !== undefined\n                ? container.particles.linksColors.get(linksOptions.id)\n                : container.particles.linksColor;\n            colorLine = Utils_1.ColorUtils.getLinkColor(p1, p2, linkColor);\n        }\n        if (!colorLine) {\n            return;\n        }\n        const width = (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n        const maxDistance = (_b = p1.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n        Utils_1.CanvasUtils.drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c, _d;\n        if (((_a = particle.image) === null || _a === void 0 ? void 0 : _a.loaded) === false || particle.spawning || particle.destroyed) {\n            return;\n        }\n        const pfColor = particle.getFillColor();\n        const psColor = (_b = particle.getStrokeColor()) !== null && _b !== void 0 ? _b : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        const options = this.container.actualOptions;\n        const pOptions = particle.options;\n        const twinkle = pOptions.twinkle.particles;\n        const twinkleFreq = twinkle.frequency;\n        const twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n        const twinkling = twinkle.enable && Math.random() < twinkleFreq;\n        const radius = particle.getRadius();\n        const opacity = twinkling ? twinkle.opacity : (_c = particle.bubble.opacity) !== null && _c !== void 0 ? _c : particle.opacity.value;\n        const infectionStage = particle.infecter.infectionStage;\n        const infection = options.infection;\n        const infectionStages = infection.stages;\n        const infectionColor = infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n        const infectionRgb = Utils_1.ColorUtils.colorToRgb(infectionColor);\n        const fColor = twinkling && twinkleRgb !== undefined\n            ? twinkleRgb\n            : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : (pfColor ? Utils_1.ColorUtils.hslToRgb(pfColor) : undefined);\n        const sColor = twinkling && twinkleRgb !== undefined\n            ? twinkleRgb\n            : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : (psColor ? Utils_1.ColorUtils.hslToRgb(psColor) : undefined);\n        const fillColorValue = fColor !== undefined ? Utils_1.ColorUtils.getStyleFromRgb(fColor, opacity) : undefined;\n        if (!this.context || (!fillColorValue && !sColor)) {\n            return;\n        }\n        const strokeColorValue = sColor !== undefined\n            ? Utils_1.ColorUtils.getStyleFromRgb(sColor, (_d = particle.stroke.opacity) !== null && _d !== void 0 ? _d : opacity)\n            : fillColorValue;\n        this.drawParticleLinks(particle);\n        if (radius > 0) {\n            Utils_1.CanvasUtils.drawParticle(this.container, this.context, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius, opacity, particle.options.shadow);\n        }\n    }\n    drawParticleLinks(particle) {\n        if (!this.context) {\n            return;\n        }\n        const container = this.container;\n        const particles = container.particles;\n        const pOptions = particle.options;\n        if (particle.links.length > 0) {\n            this.context.save();\n            const p1Links = particle.links.filter((l) => {\n                const linkFreq = container.particles.getLinkFrequency(particle, l.destination);\n                return linkFreq <= pOptions.links.frequency;\n            });\n            for (const link of p1Links) {\n                const p2 = link.destination;\n                if (pOptions.links.triangles.enable) {\n                    const links = p1Links.map((l) => l.destination);\n                    const vertices = p2.links.filter((t) => {\n                        const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n                        return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n                    });\n                    if (vertices.length) {\n                        for (const vertex of vertices) {\n                            const p3 = vertex.destination;\n                            const triangleFreq = particles.getTriangleFrequency(particle, p2, p3);\n                            if (triangleFreq > pOptions.links.triangles.frequency) {\n                                continue;\n                            }\n                            this.drawLinkTriangle(particle, link, vertex);\n                        }\n                    }\n                }\n                if (link.opacity > 0 && container.retina.linksWidth > 0) {\n                    this.drawLinkLine(particle, link);\n                }\n            }\n            this.context.restore();\n        }\n    }\n    drawPlugin(plugin, delta) {\n        if (!this.context) {\n            return;\n        }\n        Utils_1.CanvasUtils.drawPlugin(this.context, plugin, delta);\n    }\n    drawLight(mousePos) {\n        if (!this.context) {\n            return;\n        }\n        Utils_1.CanvasUtils.drawLight(this.container, this.context, mousePos);\n    }\n    initBackground() {\n        const options = this.container.actualOptions;\n        const background = options.background;\n        const element = this.element;\n        const elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = Utils_1.ColorUtils.colorToRgb(background.color);\n            elementStyle.backgroundColor = color ? Utils_1.ColorUtils.getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    paintBase(baseColor) {\n        if (!this.context) {\n            return;\n        }\n        Utils_1.CanvasUtils.paintBase(this.context, this.size, baseColor);\n    }\n    lineStyle(p1, p2) {\n        if (!this.context) {\n            return;\n        }\n        const options = this.container.actualOptions;\n        const connectOptions = options.interactivity.modes.connect;\n        return Utils_1.CanvasUtils.gradient(this.context, p1, p2, connectOptions.links.opacity);\n    }\n}\nexports.Canvas = Canvas;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}