{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Emitters = void 0;\nconst EmitterInstance_1 = require(\"./EmitterInstance\");\nconst Utils_1 = require(\"../../Utils\");\nconst Emitter_1 = require(\"./Options/Classes/Emitter\");\nconst Enums_1 = require(\"./Enums\");\nclass Emitters {\n  constructor(container) {\n    this.container = container;\n    this.array = [];\n    this.emitters = [];\n    this.interactivityEmitters = [];\n    const overridableContainer = container;\n    overridableContainer.getEmitter = idxOrName => idxOrName === undefined || typeof idxOrName === \"number\" ? this.array[idxOrName || 0] : this.array.find(t => t.name === idxOrName);\n    overridableContainer.addEmitter = (options, position) => this.addEmitter(options, position);\n    overridableContainer.playEmitter = idxOrName => {\n      const emitter = overridableContainer.getEmitter(idxOrName);\n      if (emitter) {\n        emitter.externalPlay();\n      }\n    };\n    overridableContainer.pauseEmitter = idxOrName => {\n      const emitter = overridableContainer.getEmitter(idxOrName);\n      if (emitter) {\n        emitter.externalPause();\n      }\n    };\n  }\n  init(options) {\n    var _a, _b;\n    if (!options) {\n      return;\n    }\n    if (options.emitters) {\n      if (options.emitters instanceof Array) {\n        this.emitters = options.emitters.map(s => {\n          const tmp = new Emitter_1.Emitter();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        if (this.emitters instanceof Array) {\n          this.emitters = new Emitter_1.Emitter();\n        }\n        this.emitters.load(options.emitters);\n      }\n    }\n    const interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n    if (interactivityEmitters) {\n      if (interactivityEmitters instanceof Array) {\n        this.interactivityEmitters = interactivityEmitters.map(s => {\n          const tmp = new Emitter_1.Emitter();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        if (this.interactivityEmitters instanceof Array) {\n          this.interactivityEmitters = new Emitter_1.Emitter();\n        }\n        this.interactivityEmitters.load(interactivityEmitters);\n      }\n    }\n    if (this.emitters instanceof Array) {\n      for (const emitterOptions of this.emitters) {\n        this.addEmitter(emitterOptions);\n      }\n    } else {\n      this.addEmitter(this.emitters);\n    }\n  }\n  play() {\n    for (const emitter of this.array) {\n      emitter.play();\n    }\n  }\n  pause() {\n    for (const emitter of this.array) {\n      emitter.pause();\n    }\n  }\n  stop() {\n    this.array = [];\n  }\n  update(delta) {\n    for (const emitter of this.array) {\n      emitter.update(delta);\n    }\n  }\n  handleClickMode(mode) {\n    const container = this.container;\n    const emitterOptions = this.emitters;\n    const modeEmitters = this.interactivityEmitters;\n    if (mode === Enums_1.EmitterClickMode.emitter) {\n      let emitterModeOptions;\n      if (modeEmitters instanceof Array) {\n        if (modeEmitters.length > 0) {\n          emitterModeOptions = Utils_1.Utils.itemFromArray(modeEmitters);\n        }\n      } else {\n        emitterModeOptions = modeEmitters;\n      }\n      const emittersOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : emitterOptions instanceof Array ? Utils_1.Utils.itemFromArray(emitterOptions) : emitterOptions;\n      const ePosition = container.interactivity.mouse.clickPosition;\n      this.addEmitter(Utils_1.Utils.deepExtend({}, emittersOptions), ePosition);\n    }\n  }\n  resize() {\n    for (const emitter of this.array) {\n      emitter.resize();\n    }\n  }\n  addEmitter(options, position) {\n    const emitter = new EmitterInstance_1.EmitterInstance(this, this.container, options, position);\n    this.array.push(emitter);\n    return emitter;\n  }\n  removeEmitter(emitter) {\n    const index = this.array.indexOf(emitter);\n    if (index >= 0) {\n      this.array.splice(index, 1);\n    }\n  }\n}\nexports.Emitters = Emitters;","map":{"version":3,"names":["Object","defineProperty","exports","value","Emitters","EmitterInstance_1","require","Utils_1","Emitter_1","Enums_1","constructor","container","array","emitters","interactivityEmitters","overridableContainer","getEmitter","idxOrName","undefined","find","t","name","addEmitter","options","position","playEmitter","emitter","externalPlay","pauseEmitter","externalPause","init","_a","_b","Array","map","s","tmp","Emitter","load","interactivity","modes","emitterOptions","play","pause","stop","update","delta","handleClickMode","mode","modeEmitters","EmitterClickMode","emitterModeOptions","length","Utils","itemFromArray","emittersOptions","ePosition","mouse","clickPosition","deepExtend","resize","EmitterInstance","push","removeEmitter","index","indexOf","splice"],"sources":["H:/React Website/node_modules/tsparticles/Plugins/Emitters/Emitters.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitters = void 0;\nconst EmitterInstance_1 = require(\"./EmitterInstance\");\nconst Utils_1 = require(\"../../Utils\");\nconst Emitter_1 = require(\"./Options/Classes/Emitter\");\nconst Enums_1 = require(\"./Enums\");\nclass Emitters {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = [];\n        const overridableContainer = container;\n        overridableContainer.getEmitter = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        overridableContainer.addEmitter = (options, position) => this.addEmitter(options, position);\n        overridableContainer.playEmitter = (idxOrName) => {\n            const emitter = overridableContainer.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        overridableContainer.pauseEmitter = (idxOrName) => {\n            const emitter = overridableContainer.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    init(options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        if (options.emitters) {\n            if (options.emitters instanceof Array) {\n                this.emitters = options.emitters.map((s) => {\n                    const tmp = new Emitter_1.Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.emitters instanceof Array) {\n                    this.emitters = new Emitter_1.Emitter();\n                }\n                this.emitters.load(options.emitters);\n            }\n        }\n        const interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                this.interactivityEmitters = interactivityEmitters.map((s) => {\n                    const tmp = new Emitter_1.Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.interactivityEmitters instanceof Array) {\n                    this.interactivityEmitters = new Emitter_1.Emitter();\n                }\n                this.interactivityEmitters.load(interactivityEmitters);\n            }\n        }\n        if (this.emitters instanceof Array) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const emitterOptions = this.emitters;\n        const modeEmitters = this.interactivityEmitters;\n        if (mode === Enums_1.EmitterClickMode.emitter) {\n            let emitterModeOptions;\n            if (modeEmitters instanceof Array) {\n                if (modeEmitters.length > 0) {\n                    emitterModeOptions = Utils_1.Utils.itemFromArray(modeEmitters);\n                }\n            }\n            else {\n                emitterModeOptions = modeEmitters;\n            }\n            const emittersOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : (emitterOptions instanceof Array ? Utils_1.Utils.itemFromArray(emitterOptions) : emitterOptions);\n            const ePosition = container.interactivity.mouse.clickPosition;\n            this.addEmitter(Utils_1.Utils.deepExtend({}, emittersOptions), ePosition);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    addEmitter(options, position) {\n        const emitter = new EmitterInstance_1.EmitterInstance(this, this.container, options, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n}\nexports.Emitters = Emitters;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}