{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorUtils = void 0;\nconst Utils_1 = require(\"./Utils\");\nconst Constants_1 = require(\"./Constants\");\nconst NumberUtils_1 = require(\"./NumberUtils\");\nfunction hue2rgb(p, q, t) {\n  let tCalc = t;\n  if (tCalc < 0) {\n    tCalc += 1;\n  }\n  if (tCalc > 1) {\n    tCalc -= 1;\n  }\n  if (tCalc < 1 / 6) {\n    return p + (q - p) * 6 * tCalc;\n  }\n  if (tCalc < 1 / 2) {\n    return q;\n  }\n  if (tCalc < 2 / 3) {\n    return p + (q - p) * (2 / 3 - tCalc) * 6;\n  }\n  return p;\n}\nfunction stringToRgba(input) {\n  if (input.startsWith(\"rgb\")) {\n    const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n    const result = regex.exec(input);\n    return result ? {\n      a: result.length > 4 ? parseFloat(result[5]) : 1,\n      b: parseInt(result[3], 10),\n      g: parseInt(result[2], 10),\n      r: parseInt(result[1], 10)\n    } : undefined;\n  } else if (input.startsWith(\"hsl\")) {\n    const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n    const result = regex.exec(input);\n    return result ? ColorUtils.hslaToRgba({\n      a: result.length > 4 ? parseFloat(result[5]) : 1,\n      h: parseInt(result[1], 10),\n      l: parseInt(result[3], 10),\n      s: parseInt(result[2], 10)\n    }) : undefined;\n  } else if (input.startsWith(\"hsv\")) {\n    const regex = /hsva?\\(\\s*(\\d+)Â°\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n    const result = regex.exec(input);\n    return result ? ColorUtils.hsvaToRgba({\n      a: result.length > 4 ? parseFloat(result[5]) : 1,\n      h: parseInt(result[1], 10),\n      s: parseInt(result[2], 10),\n      v: parseInt(result[3], 10)\n    }) : undefined;\n  } else {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\n    const hexFixed = input.replace(shorthandRegex, (_m, r, g, b, a) => {\n      return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    });\n    const regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i;\n    const result = regex.exec(hexFixed);\n    return result ? {\n      a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n      b: parseInt(result[3], 16),\n      g: parseInt(result[2], 16),\n      r: parseInt(result[1], 16)\n    } : undefined;\n  }\n}\nclass ColorUtils {\n  static colorToRgb(input, index) {\n    let useIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var _a, _b, _c;\n    if (input === undefined) {\n      return;\n    }\n    const color = typeof input === \"string\" ? {\n      value: input\n    } : input;\n    let res;\n    if (typeof color.value === \"string\") {\n      if (color.value === Constants_1.Constants.randomColorValue) {\n        res = ColorUtils.getRandomRgbColor();\n      } else {\n        res = ColorUtils.stringToRgb(color.value);\n      }\n    } else {\n      if (color.value instanceof Array) {\n        const colorSelected = Utils_1.Utils.itemFromArray(color.value, index, useIndex);\n        res = ColorUtils.colorToRgb({\n          value: colorSelected\n        });\n      } else {\n        const colorValue = color.value;\n        const rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n        if (rgbColor.r !== undefined) {\n          res = rgbColor;\n        } else {\n          const hslColor = (_b = colorValue.hsl) !== null && _b !== void 0 ? _b : color.value;\n          if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            res = ColorUtils.hslToRgb(hslColor);\n          } else {\n            const hsvColor = (_c = colorValue.hsv) !== null && _c !== void 0 ? _c : color.value;\n            if (hsvColor.h !== undefined && hsvColor.v !== undefined) {\n              res = ColorUtils.hsvToRgb(hsvColor);\n            }\n          }\n        }\n      }\n    }\n    return res;\n  }\n  static colorToHsl(color, index) {\n    let useIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const rgb = ColorUtils.colorToRgb(color, index, useIndex);\n    return rgb !== undefined ? ColorUtils.rgbToHsl(rgb) : undefined;\n  }\n  static rgbToHsl(color) {\n    const r1 = color.r / 255;\n    const g1 = color.g / 255;\n    const b1 = color.b / 255;\n    const max = Math.max(r1, g1, b1);\n    const min = Math.min(r1, g1, b1);\n    const res = {\n      h: 0,\n      l: (max + min) / 2,\n      s: 0\n    };\n    if (max != min) {\n      res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n      res.h = r1 === max ? (g1 - b1) / (max - min) : res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min);\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n      res.h += 360;\n    }\n    return res;\n  }\n  static stringToAlpha(input) {\n    var _a;\n    return (_a = stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n  }\n  static stringToRgb(input) {\n    return stringToRgba(input);\n  }\n  static hslToRgb(hsl) {\n    const result = {\n      b: 0,\n      g: 0,\n      r: 0\n    };\n    const hslPercent = {\n      h: hsl.h / 360,\n      l: hsl.l / 100,\n      s: hsl.s / 100\n    };\n    if (hslPercent.s === 0) {\n      result.b = hslPercent.l;\n      result.g = hslPercent.l;\n      result.r = hslPercent.l;\n    } else {\n      const q = hslPercent.l < 0.5 ? hslPercent.l * (1 + hslPercent.s) : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s;\n      const p = 2 * hslPercent.l - q;\n      result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n      result.g = hue2rgb(p, q, hslPercent.h);\n      result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n  }\n  static hslaToRgba(hsla) {\n    const rgbResult = ColorUtils.hslToRgb(hsla);\n    return {\n      a: hsla.a,\n      b: rgbResult.b,\n      g: rgbResult.g,\n      r: rgbResult.r\n    };\n  }\n  static hslToHsv(hsl) {\n    const l = hsl.l / 100,\n      sl = hsl.s / 100;\n    const v = l + sl * Math.min(l, 1 - l),\n      sv = !v ? 0 : 2 * (1 - l / v);\n    return {\n      h: hsl.h,\n      s: sv * 100,\n      v: v * 100\n    };\n  }\n  static hslaToHsva(hsla) {\n    const hsvResult = ColorUtils.hslToHsv(hsla);\n    return {\n      a: hsla.a,\n      h: hsvResult.h,\n      s: hsvResult.s,\n      v: hsvResult.v\n    };\n  }\n  static hsvToHsl(hsv) {\n    const v = hsv.v / 100,\n      sv = hsv.s / 100;\n    const l = v * (1 - sv / 2),\n      sl = l === 0 || l === 1 ? 0 : (v - l) / Math.min(l, 1 - l);\n    return {\n      h: hsv.h,\n      l: l * 100,\n      s: sl * 100\n    };\n  }\n  static hsvaToHsla(hsva) {\n    const hslResult = ColorUtils.hsvToHsl(hsva);\n    return {\n      a: hsva.a,\n      h: hslResult.h,\n      l: hslResult.l,\n      s: hslResult.s\n    };\n  }\n  static hsvToRgb(hsv) {\n    const result = {\n      b: 0,\n      g: 0,\n      r: 0\n    };\n    const hsvPercent = {\n      h: hsv.h / 60,\n      s: hsv.s / 100,\n      v: hsv.v / 100\n    };\n    const c = hsvPercent.v * hsvPercent.s,\n      x = c * (1 - Math.abs(hsvPercent.h % 2 - 1));\n    let tempRgb;\n    if (hsvPercent.h >= 0 && hsvPercent.h <= 1) {\n      tempRgb = {\n        r: c,\n        g: x,\n        b: 0\n      };\n    } else if (hsvPercent.h > 1 && hsvPercent.h <= 2) {\n      tempRgb = {\n        r: x,\n        g: c,\n        b: 0\n      };\n    } else if (hsvPercent.h > 2 && hsvPercent.h <= 3) {\n      tempRgb = {\n        r: 0,\n        g: c,\n        b: x\n      };\n    } else if (hsvPercent.h > 3 && hsvPercent.h <= 4) {\n      tempRgb = {\n        r: 0,\n        g: x,\n        b: c\n      };\n    } else if (hsvPercent.h > 4 && hsvPercent.h <= 5) {\n      tempRgb = {\n        r: x,\n        g: 0,\n        b: c\n      };\n    } else if (hsvPercent.h > 5 && hsvPercent.h <= 6) {\n      tempRgb = {\n        r: c,\n        g: 0,\n        b: x\n      };\n    }\n    if (tempRgb) {\n      const m = hsvPercent.v - c;\n      result.r = Math.floor((tempRgb.r + m) * 255);\n      result.g = Math.floor((tempRgb.g + m) * 255);\n      result.b = Math.floor((tempRgb.b + m) * 255);\n    }\n    return result;\n  }\n  static hsvaToRgba(hsva) {\n    const rgbResult = ColorUtils.hsvToRgb(hsva);\n    return {\n      a: hsva.a,\n      b: rgbResult.b,\n      g: rgbResult.g,\n      r: rgbResult.r\n    };\n  }\n  static rgbToHsv(rgb) {\n    const rgbPercent = {\n        r: rgb.r / 255,\n        g: rgb.g / 255,\n        b: rgb.b / 255\n      },\n      xMax = Math.max(rgbPercent.r, rgbPercent.g, rgbPercent.b),\n      xMin = Math.min(rgbPercent.r, rgbPercent.g, rgbPercent.b),\n      v = xMax,\n      c = xMax - xMin;\n    let h = 0;\n    if (v === rgbPercent.r) {\n      h = 60 * ((rgbPercent.g - rgbPercent.b) / c);\n    } else if (v === rgbPercent.g) {\n      h = 60 * (2 + (rgbPercent.b - rgbPercent.r) / c);\n    } else if (v === rgbPercent.b) {\n      h = 60 * (4 + (rgbPercent.r - rgbPercent.g) / c);\n    }\n    const s = !v ? 0 : c / v;\n    return {\n      h,\n      s: s * 100,\n      v: v * 100\n    };\n  }\n  static rgbaToHsva(rgba) {\n    const hsvResult = ColorUtils.rgbToHsv(rgba);\n    return {\n      a: rgba.a,\n      h: hsvResult.h,\n      s: hsvResult.s,\n      v: hsvResult.v\n    };\n  }\n  static getRandomRgbColor(min) {\n    const fixedMin = min !== null && min !== void 0 ? min : 0;\n    return {\n      b: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256))),\n      g: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256))),\n      r: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256)))\n    };\n  }\n  static getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n  }\n  static getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n  }\n  static getStyleFromHsv(color, opacity) {\n    return ColorUtils.getStyleFromHsl(ColorUtils.hsvToHsl(color), opacity);\n  }\n  static mix(color1, color2, size1, size2) {\n    let rgb1 = color1;\n    let rgb2 = color2;\n    if (rgb1.r === undefined) {\n      rgb1 = ColorUtils.hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n      rgb2 = ColorUtils.hslToRgb(color2);\n    }\n    return {\n      b: NumberUtils_1.NumberUtils.mix(rgb1.b, rgb2.b, size1, size2),\n      g: NumberUtils_1.NumberUtils.mix(rgb1.g, rgb2.g, size1, size2),\n      r: NumberUtils_1.NumberUtils.mix(rgb1.r, rgb2.r, size1, size2)\n    };\n  }\n  static replaceColorSvg(imageShape, color, opacity) {\n    const {\n      svgData\n    } = imageShape;\n    if (!svgData) {\n      return \"\";\n    }\n    if (svgData.includes(\"fill\")) {\n      const currentColor = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\n      return svgData.replace(currentColor, () => ColorUtils.getStyleFromHsl(color, opacity));\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${ColorUtils.getStyleFromHsl(color, opacity)}\"${svgData.substring(preFillIndex)}`;\n  }\n  static getLinkColor(p1, p2, linkColor) {\n    var _a, _b;\n    if (linkColor === Constants_1.Constants.randomColorValue) {\n      return ColorUtils.getRandomRgbColor();\n    } else if (linkColor === \"mid\") {\n      const sourceColor = (_a = p1.getFillColor()) !== null && _a !== void 0 ? _a : p1.getStrokeColor();\n      const destColor = (_b = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _b !== void 0 ? _b : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n      if (sourceColor && destColor && p2) {\n        return ColorUtils.mix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n      } else {\n        const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n        if (hslColor) {\n          return ColorUtils.hslToRgb(hslColor);\n        }\n      }\n    } else {\n      return linkColor;\n    }\n  }\n  static getLinkRandomColor(optColor, blink, consent) {\n    const color = typeof optColor === \"string\" ? optColor : optColor.value;\n    if (color === Constants_1.Constants.randomColorValue) {\n      if (consent) {\n        return ColorUtils.colorToRgb({\n          value: color\n        });\n      } else if (blink) {\n        return Constants_1.Constants.randomColorValue;\n      } else {\n        return Constants_1.Constants.midColorValue;\n      }\n    } else {\n      return ColorUtils.colorToRgb({\n        value: color\n      });\n    }\n  }\n  static getHslFromAnimation(animation) {\n    return animation !== undefined ? {\n      h: animation.h.value,\n      s: animation.s.value,\n      l: animation.l.value\n    } : undefined;\n  }\n}\nexports.ColorUtils = ColorUtils;","map":{"version":3,"names":["Object","defineProperty","exports","value","ColorUtils","Utils_1","require","Constants_1","NumberUtils_1","hue2rgb","p","q","t","tCalc","stringToRgba","input","startsWith","regex","result","exec","a","length","parseFloat","b","parseInt","g","r","undefined","hslaToRgba","h","l","s","hsvaToRgba","v","shorthandRegex","hexFixed","replace","_m","colorToRgb","index","useIndex","arguments","_a","_b","_c","color","res","Constants","randomColorValue","getRandomRgbColor","stringToRgb","Array","colorSelected","Utils","itemFromArray","colorValue","rgbColor","rgb","hslColor","hsl","hslToRgb","hsvColor","hsv","hsvToRgb","colorToHsl","rgbToHsl","r1","g1","b1","max","Math","min","stringToAlpha","hslPercent","floor","hsla","rgbResult","hslToHsv","sl","sv","hslaToHsva","hsvResult","hsvToHsl","hsvaToHsla","hsva","hslResult","hsvPercent","c","x","abs","tempRgb","m","rgbToHsv","rgbPercent","xMax","xMin","rgbaToHsva","rgba","fixedMin","NumberUtils","randomInRange","setRangeValue","getStyleFromRgb","opacity","getStyleFromHsl","getStyleFromHsv","mix","color1","color2","size1","size2","rgb1","rgb2","replaceColorSvg","imageShape","svgData","includes","currentColor","preFillIndex","indexOf","substring","getLinkColor","p1","p2","linkColor","sourceColor","getFillColor","getStrokeColor","destColor","getRadius","getLinkRandomColor","optColor","blink","consent","midColorValue","getHslFromAnimation","animation"],"sources":["C:/Users/rakib/Capstone2/rakibulll.github.io/node_modules/tsparticles/Utils/ColorUtils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorUtils = void 0;\nconst Utils_1 = require(\"./Utils\");\nconst Constants_1 = require(\"./Constants\");\nconst NumberUtils_1 = require(\"./NumberUtils\");\nfunction hue2rgb(p, q, t) {\n    let tCalc = t;\n    if (tCalc < 0) {\n        tCalc += 1;\n    }\n    if (tCalc > 1) {\n        tCalc -= 1;\n    }\n    if (tCalc < 1 / 6) {\n        return p + (q - p) * 6 * tCalc;\n    }\n    if (tCalc < 1 / 2) {\n        return q;\n    }\n    if (tCalc < 2 / 3) {\n        return p + (q - p) * (2 / 3 - tCalc) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    if (input.startsWith(\"rgb\")) {\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n        const result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseFloat(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n    else if (input.startsWith(\"hsl\")) {\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n        const result = regex.exec(input);\n        return result\n            ? ColorUtils.hslaToRgba({\n                a: result.length > 4 ? parseFloat(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n    else if (input.startsWith(\"hsv\")) {\n        const regex = /hsva?\\(\\s*(\\d+)Â°\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n        const result = regex.exec(input);\n        return result\n            ? ColorUtils.hsvaToRgba({\n                a: result.length > 4 ? parseFloat(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                s: parseInt(result[2], 10),\n                v: parseInt(result[3], 10),\n            })\n            : undefined;\n    }\n    else {\n        const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\n        const hexFixed = input.replace(shorthandRegex, (_m, r, g, b, a) => {\n            return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n        });\n        const regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i;\n        const result = regex.exec(hexFixed);\n        return result\n            ? {\n                a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n                b: parseInt(result[3], 16),\n                g: parseInt(result[2], 16),\n                r: parseInt(result[1], 16),\n            }\n            : undefined;\n    }\n}\nclass ColorUtils {\n    static colorToRgb(input, index, useIndex = true) {\n        var _a, _b, _c;\n        if (input === undefined) {\n            return;\n        }\n        const color = typeof input === \"string\" ? { value: input } : input;\n        let res;\n        if (typeof color.value === \"string\") {\n            if (color.value === Constants_1.Constants.randomColorValue) {\n                res = ColorUtils.getRandomRgbColor();\n            }\n            else {\n                res = ColorUtils.stringToRgb(color.value);\n            }\n        }\n        else {\n            if (color.value instanceof Array) {\n                const colorSelected = Utils_1.Utils.itemFromArray(color.value, index, useIndex);\n                res = ColorUtils.colorToRgb({ value: colorSelected });\n            }\n            else {\n                const colorValue = color.value;\n                const rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n                if (rgbColor.r !== undefined) {\n                    res = rgbColor;\n                }\n                else {\n                    const hslColor = (_b = colorValue.hsl) !== null && _b !== void 0 ? _b : color.value;\n                    if (hslColor.h !== undefined && hslColor.l !== undefined) {\n                        res = ColorUtils.hslToRgb(hslColor);\n                    }\n                    else {\n                        const hsvColor = (_c = colorValue.hsv) !== null && _c !== void 0 ? _c : color.value;\n                        if (hsvColor.h !== undefined && hsvColor.v !== undefined) {\n                            res = ColorUtils.hsvToRgb(hsvColor);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    static colorToHsl(color, index, useIndex = true) {\n        const rgb = ColorUtils.colorToRgb(color, index, useIndex);\n        return rgb !== undefined ? ColorUtils.rgbToHsl(rgb) : undefined;\n    }\n    static rgbToHsl(color) {\n        const r1 = color.r / 255;\n        const g1 = color.g / 255;\n        const b1 = color.b / 255;\n        const max = Math.max(r1, g1, b1);\n        const min = Math.min(r1, g1, b1);\n        const res = {\n            h: 0,\n            l: (max + min) / 2,\n            s: 0,\n        };\n        if (max != min) {\n            res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n            res.h =\n                r1 === max\n                    ? (g1 - b1) / (max - min)\n                    : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n        }\n        res.l *= 100;\n        res.s *= 100;\n        res.h *= 60;\n        if (res.h < 0) {\n            res.h += 360;\n        }\n        return res;\n    }\n    static stringToAlpha(input) {\n        var _a;\n        return (_a = stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n    }\n    static stringToRgb(input) {\n        return stringToRgba(input);\n    }\n    static hslToRgb(hsl) {\n        const result = { b: 0, g: 0, r: 0 };\n        const hslPercent = {\n            h: hsl.h / 360,\n            l: hsl.l / 100,\n            s: hsl.s / 100,\n        };\n        if (hslPercent.s === 0) {\n            result.b = hslPercent.l;\n            result.g = hslPercent.l;\n            result.r = hslPercent.l;\n        }\n        else {\n            const q = hslPercent.l < 0.5\n                ? hslPercent.l * (1 + hslPercent.s)\n                : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s;\n            const p = 2 * hslPercent.l - q;\n            result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n            result.g = hue2rgb(p, q, hslPercent.h);\n            result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n        }\n        result.r = Math.floor(result.r * 255);\n        result.g = Math.floor(result.g * 255);\n        result.b = Math.floor(result.b * 255);\n        return result;\n    }\n    static hslaToRgba(hsla) {\n        const rgbResult = ColorUtils.hslToRgb(hsla);\n        return {\n            a: hsla.a,\n            b: rgbResult.b,\n            g: rgbResult.g,\n            r: rgbResult.r,\n        };\n    }\n    static hslToHsv(hsl) {\n        const l = hsl.l / 100, sl = hsl.s / 100;\n        const v = l + sl * Math.min(l, 1 - l), sv = !v ? 0 : 2 * (1 - l / v);\n        return {\n            h: hsl.h,\n            s: sv * 100,\n            v: v * 100,\n        };\n    }\n    static hslaToHsva(hsla) {\n        const hsvResult = ColorUtils.hslToHsv(hsla);\n        return {\n            a: hsla.a,\n            h: hsvResult.h,\n            s: hsvResult.s,\n            v: hsvResult.v,\n        };\n    }\n    static hsvToHsl(hsv) {\n        const v = hsv.v / 100, sv = hsv.s / 100;\n        const l = v * (1 - sv / 2), sl = l === 0 || l === 1 ? 0 : (v - l) / Math.min(l, 1 - l);\n        return {\n            h: hsv.h,\n            l: l * 100,\n            s: sl * 100,\n        };\n    }\n    static hsvaToHsla(hsva) {\n        const hslResult = ColorUtils.hsvToHsl(hsva);\n        return {\n            a: hsva.a,\n            h: hslResult.h,\n            l: hslResult.l,\n            s: hslResult.s,\n        };\n    }\n    static hsvToRgb(hsv) {\n        const result = { b: 0, g: 0, r: 0 };\n        const hsvPercent = {\n            h: hsv.h / 60,\n            s: hsv.s / 100,\n            v: hsv.v / 100,\n        };\n        const c = hsvPercent.v * hsvPercent.s, x = c * (1 - Math.abs((hsvPercent.h % 2) - 1));\n        let tempRgb;\n        if (hsvPercent.h >= 0 && hsvPercent.h <= 1) {\n            tempRgb = {\n                r: c,\n                g: x,\n                b: 0,\n            };\n        }\n        else if (hsvPercent.h > 1 && hsvPercent.h <= 2) {\n            tempRgb = {\n                r: x,\n                g: c,\n                b: 0,\n            };\n        }\n        else if (hsvPercent.h > 2 && hsvPercent.h <= 3) {\n            tempRgb = {\n                r: 0,\n                g: c,\n                b: x,\n            };\n        }\n        else if (hsvPercent.h > 3 && hsvPercent.h <= 4) {\n            tempRgb = {\n                r: 0,\n                g: x,\n                b: c,\n            };\n        }\n        else if (hsvPercent.h > 4 && hsvPercent.h <= 5) {\n            tempRgb = {\n                r: x,\n                g: 0,\n                b: c,\n            };\n        }\n        else if (hsvPercent.h > 5 && hsvPercent.h <= 6) {\n            tempRgb = {\n                r: c,\n                g: 0,\n                b: x,\n            };\n        }\n        if (tempRgb) {\n            const m = hsvPercent.v - c;\n            result.r = Math.floor((tempRgb.r + m) * 255);\n            result.g = Math.floor((tempRgb.g + m) * 255);\n            result.b = Math.floor((tempRgb.b + m) * 255);\n        }\n        return result;\n    }\n    static hsvaToRgba(hsva) {\n        const rgbResult = ColorUtils.hsvToRgb(hsva);\n        return {\n            a: hsva.a,\n            b: rgbResult.b,\n            g: rgbResult.g,\n            r: rgbResult.r,\n        };\n    }\n    static rgbToHsv(rgb) {\n        const rgbPercent = {\n            r: rgb.r / 255,\n            g: rgb.g / 255,\n            b: rgb.b / 255,\n        }, xMax = Math.max(rgbPercent.r, rgbPercent.g, rgbPercent.b), xMin = Math.min(rgbPercent.r, rgbPercent.g, rgbPercent.b), v = xMax, c = xMax - xMin;\n        let h = 0;\n        if (v === rgbPercent.r) {\n            h = 60 * ((rgbPercent.g - rgbPercent.b) / c);\n        }\n        else if (v === rgbPercent.g) {\n            h = 60 * (2 + (rgbPercent.b - rgbPercent.r) / c);\n        }\n        else if (v === rgbPercent.b) {\n            h = 60 * (4 + (rgbPercent.r - rgbPercent.g) / c);\n        }\n        const s = !v ? 0 : c / v;\n        return {\n            h,\n            s: s * 100,\n            v: v * 100,\n        };\n    }\n    static rgbaToHsva(rgba) {\n        const hsvResult = ColorUtils.rgbToHsv(rgba);\n        return {\n            a: rgba.a,\n            h: hsvResult.h,\n            s: hsvResult.s,\n            v: hsvResult.v,\n        };\n    }\n    static getRandomRgbColor(min) {\n        const fixedMin = min !== null && min !== void 0 ? min : 0;\n        return {\n            b: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256))),\n            g: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256))),\n            r: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256))),\n        };\n    }\n    static getStyleFromRgb(color, opacity) {\n        return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n    }\n    static getStyleFromHsl(color, opacity) {\n        return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n    }\n    static getStyleFromHsv(color, opacity) {\n        return ColorUtils.getStyleFromHsl(ColorUtils.hsvToHsl(color), opacity);\n    }\n    static mix(color1, color2, size1, size2) {\n        let rgb1 = color1;\n        let rgb2 = color2;\n        if (rgb1.r === undefined) {\n            rgb1 = ColorUtils.hslToRgb(color1);\n        }\n        if (rgb2.r === undefined) {\n            rgb2 = ColorUtils.hslToRgb(color2);\n        }\n        return {\n            b: NumberUtils_1.NumberUtils.mix(rgb1.b, rgb2.b, size1, size2),\n            g: NumberUtils_1.NumberUtils.mix(rgb1.g, rgb2.g, size1, size2),\n            r: NumberUtils_1.NumberUtils.mix(rgb1.r, rgb2.r, size1, size2),\n        };\n    }\n    static replaceColorSvg(imageShape, color, opacity) {\n        const { svgData } = imageShape;\n        if (!svgData) {\n            return \"\";\n        }\n        if (svgData.includes(\"fill\")) {\n            const currentColor = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\n            return svgData.replace(currentColor, () => ColorUtils.getStyleFromHsl(color, opacity));\n        }\n        const preFillIndex = svgData.indexOf(\">\");\n        return `${svgData.substring(0, preFillIndex)} fill=\"${ColorUtils.getStyleFromHsl(color, opacity)}\"${svgData.substring(preFillIndex)}`;\n    }\n    static getLinkColor(p1, p2, linkColor) {\n        var _a, _b;\n        if (linkColor === Constants_1.Constants.randomColorValue) {\n            return ColorUtils.getRandomRgbColor();\n        }\n        else if (linkColor === \"mid\") {\n            const sourceColor = (_a = p1.getFillColor()) !== null && _a !== void 0 ? _a : p1.getStrokeColor();\n            const destColor = (_b = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _b !== void 0 ? _b : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n            if (sourceColor && destColor && p2) {\n                return ColorUtils.mix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n            }\n            else {\n                const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n                if (hslColor) {\n                    return ColorUtils.hslToRgb(hslColor);\n                }\n            }\n        }\n        else {\n            return linkColor;\n        }\n    }\n    static getLinkRandomColor(optColor, blink, consent) {\n        const color = typeof optColor === \"string\" ? optColor : optColor.value;\n        if (color === Constants_1.Constants.randomColorValue) {\n            if (consent) {\n                return ColorUtils.colorToRgb({\n                    value: color,\n                });\n            }\n            else if (blink) {\n                return Constants_1.Constants.randomColorValue;\n            }\n            else {\n                return Constants_1.Constants.midColorValue;\n            }\n        }\n        else {\n            return ColorUtils.colorToRgb({\n                value: color,\n            });\n        }\n    }\n    static getHslFromAnimation(animation) {\n        return animation !== undefined\n            ? {\n                h: animation.h.value,\n                s: animation.s.value,\n                l: animation.l.value,\n            }\n            : undefined;\n    }\n}\nexports.ColorUtils = ColorUtils;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAG,KAAK,CAAC;AAC3B,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,WAAW,GAAGD,OAAO,CAAC,aAAa,CAAC;AAC1C,MAAME,aAAa,GAAGF,OAAO,CAAC,eAAe,CAAC;AAC9C,SAASG,OAAOA,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EACtB,IAAIC,KAAK,GAAGD,CAAC;EACb,IAAIC,KAAK,GAAG,CAAC,EAAE;IACXA,KAAK,IAAI,CAAC;EACd;EACA,IAAIA,KAAK,GAAG,CAAC,EAAE;IACXA,KAAK,IAAI,CAAC;EACd;EACA,IAAIA,KAAK,GAAG,CAAC,GAAG,CAAC,EAAE;IACf,OAAOH,CAAC,GAAG,CAACC,CAAC,GAAGD,CAAC,IAAI,CAAC,GAAGG,KAAK;EAClC;EACA,IAAIA,KAAK,GAAG,CAAC,GAAG,CAAC,EAAE;IACf,OAAOF,CAAC;EACZ;EACA,IAAIE,KAAK,GAAG,CAAC,GAAG,CAAC,EAAE;IACf,OAAOH,CAAC,GAAG,CAACC,CAAC,GAAGD,CAAC,KAAK,CAAC,GAAG,CAAC,GAAGG,KAAK,CAAC,GAAG,CAAC;EAC5C;EACA,OAAOH,CAAC;AACZ;AACA,SAASI,YAAYA,CAACC,KAAK,EAAE;EACzB,IAAIA,KAAK,CAACC,UAAU,CAAC,KAAK,CAAC,EAAE;IACzB,MAAMC,KAAK,GAAG,iEAAiE;IAC/E,MAAMC,MAAM,GAAGD,KAAK,CAACE,IAAI,CAACJ,KAAK,CAAC;IAChC,OAAOG,MAAM,GACP;MACEE,CAAC,EAAEF,MAAM,CAACG,MAAM,GAAG,CAAC,GAAGC,UAAU,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;MAChDK,CAAC,EAAEC,QAAQ,CAACN,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MAC1BO,CAAC,EAAED,QAAQ,CAACN,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MAC1BQ,CAAC,EAAEF,QAAQ,CAACN,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;IAC7B,CAAC,GACCS,SAAS;EACnB,CAAC,MACI,IAAIZ,KAAK,CAACC,UAAU,CAAC,KAAK,CAAC,EAAE;IAC9B,MAAMC,KAAK,GAAG,mEAAmE;IACjF,MAAMC,MAAM,GAAGD,KAAK,CAACE,IAAI,CAACJ,KAAK,CAAC;IAChC,OAAOG,MAAM,GACPd,UAAU,CAACwB,UAAU,CAAC;MACpBR,CAAC,EAAEF,MAAM,CAACG,MAAM,GAAG,CAAC,GAAGC,UAAU,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;MAChDW,CAAC,EAAEL,QAAQ,CAACN,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MAC1BY,CAAC,EAAEN,QAAQ,CAACN,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MAC1Ba,CAAC,EAAEP,QAAQ,CAACN,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;IAC7B,CAAC,CAAC,GACAS,SAAS;EACnB,CAAC,MACI,IAAIZ,KAAK,CAACC,UAAU,CAAC,KAAK,CAAC,EAAE;IAC9B,MAAMC,KAAK,GAAG,oEAAoE;IAClF,MAAMC,MAAM,GAAGD,KAAK,CAACE,IAAI,CAACJ,KAAK,CAAC;IAChC,OAAOG,MAAM,GACPd,UAAU,CAAC4B,UAAU,CAAC;MACpBZ,CAAC,EAAEF,MAAM,CAACG,MAAM,GAAG,CAAC,GAAGC,UAAU,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;MAChDW,CAAC,EAAEL,QAAQ,CAACN,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MAC1Ba,CAAC,EAAEP,QAAQ,CAACN,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MAC1Be,CAAC,EAAET,QAAQ,CAACN,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;IAC7B,CAAC,CAAC,GACAS,SAAS;EACnB,CAAC,MACI;IACD,MAAMO,cAAc,GAAG,4CAA4C;IACnE,MAAMC,QAAQ,GAAGpB,KAAK,CAACqB,OAAO,CAACF,cAAc,EAAE,CAACG,EAAE,EAAEX,CAAC,EAAED,CAAC,EAAEF,CAAC,EAAEH,CAAC,KAAK;MAC/D,OAAOM,CAAC,GAAGA,CAAC,GAAGD,CAAC,GAAGA,CAAC,GAAGF,CAAC,GAAGA,CAAC,IAAIH,CAAC,KAAKO,SAAS,GAAGP,CAAC,GAAGA,CAAC,GAAG,EAAE,CAAC;IACjE,CAAC,CAAC;IACF,MAAMH,KAAK,GAAG,wDAAwD;IACtE,MAAMC,MAAM,GAAGD,KAAK,CAACE,IAAI,CAACgB,QAAQ,CAAC;IACnC,OAAOjB,MAAM,GACP;MACEE,CAAC,EAAEF,MAAM,CAAC,CAAC,CAAC,KAAKS,SAAS,GAAGH,QAAQ,CAACN,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC;MAC/DK,CAAC,EAAEC,QAAQ,CAACN,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MAC1BO,CAAC,EAAED,QAAQ,CAACN,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MAC1BQ,CAAC,EAAEF,QAAQ,CAACN,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;IAC7B,CAAC,GACCS,SAAS;EACnB;AACJ;AACA,MAAMvB,UAAU,CAAC;EACb,OAAOkC,UAAUA,CAACvB,KAAK,EAAEwB,KAAK,EAAmB;IAAA,IAAjBC,QAAQ,GAAAC,SAAA,CAAApB,MAAA,QAAAoB,SAAA,QAAAd,SAAA,GAAAc,SAAA,MAAG,IAAI;IAC3C,IAAIC,EAAE,EAAEC,EAAE,EAAEC,EAAE;IACd,IAAI7B,KAAK,KAAKY,SAAS,EAAE;MACrB;IACJ;IACA,MAAMkB,KAAK,GAAG,OAAO9B,KAAK,KAAK,QAAQ,GAAG;MAAEZ,KAAK,EAAEY;IAAM,CAAC,GAAGA,KAAK;IAClE,IAAI+B,GAAG;IACP,IAAI,OAAOD,KAAK,CAAC1C,KAAK,KAAK,QAAQ,EAAE;MACjC,IAAI0C,KAAK,CAAC1C,KAAK,KAAKI,WAAW,CAACwC,SAAS,CAACC,gBAAgB,EAAE;QACxDF,GAAG,GAAG1C,UAAU,CAAC6C,iBAAiB,EAAE;MACxC,CAAC,MACI;QACDH,GAAG,GAAG1C,UAAU,CAAC8C,WAAW,CAACL,KAAK,CAAC1C,KAAK,CAAC;MAC7C;IACJ,CAAC,MACI;MACD,IAAI0C,KAAK,CAAC1C,KAAK,YAAYgD,KAAK,EAAE;QAC9B,MAAMC,aAAa,GAAG/C,OAAO,CAACgD,KAAK,CAACC,aAAa,CAACT,KAAK,CAAC1C,KAAK,EAAEoC,KAAK,EAAEC,QAAQ,CAAC;QAC/EM,GAAG,GAAG1C,UAAU,CAACkC,UAAU,CAAC;UAAEnC,KAAK,EAAEiD;QAAc,CAAC,CAAC;MACzD,CAAC,MACI;QACD,MAAMG,UAAU,GAAGV,KAAK,CAAC1C,KAAK;QAC9B,MAAMqD,QAAQ,GAAG,CAACd,EAAE,GAAGa,UAAU,CAACE,GAAG,MAAM,IAAI,IAAIf,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGG,KAAK,CAAC1C,KAAK;QACnF,IAAIqD,QAAQ,CAAC9B,CAAC,KAAKC,SAAS,EAAE;UAC1BmB,GAAG,GAAGU,QAAQ;QAClB,CAAC,MACI;UACD,MAAME,QAAQ,GAAG,CAACf,EAAE,GAAGY,UAAU,CAACI,GAAG,MAAM,IAAI,IAAIhB,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGE,KAAK,CAAC1C,KAAK;UACnF,IAAIuD,QAAQ,CAAC7B,CAAC,KAAKF,SAAS,IAAI+B,QAAQ,CAAC5B,CAAC,KAAKH,SAAS,EAAE;YACtDmB,GAAG,GAAG1C,UAAU,CAACwD,QAAQ,CAACF,QAAQ,CAAC;UACvC,CAAC,MACI;YACD,MAAMG,QAAQ,GAAG,CAACjB,EAAE,GAAGW,UAAU,CAACO,GAAG,MAAM,IAAI,IAAIlB,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGC,KAAK,CAAC1C,KAAK;YACnF,IAAI0D,QAAQ,CAAChC,CAAC,KAAKF,SAAS,IAAIkC,QAAQ,CAAC5B,CAAC,KAAKN,SAAS,EAAE;cACtDmB,GAAG,GAAG1C,UAAU,CAAC2D,QAAQ,CAACF,QAAQ,CAAC;YACvC;UACJ;QACJ;MACJ;IACJ;IACA,OAAOf,GAAG;EACd;EACA,OAAOkB,UAAUA,CAACnB,KAAK,EAAEN,KAAK,EAAmB;IAAA,IAAjBC,QAAQ,GAAAC,SAAA,CAAApB,MAAA,QAAAoB,SAAA,QAAAd,SAAA,GAAAc,SAAA,MAAG,IAAI;IAC3C,MAAMgB,GAAG,GAAGrD,UAAU,CAACkC,UAAU,CAACO,KAAK,EAAEN,KAAK,EAAEC,QAAQ,CAAC;IACzD,OAAOiB,GAAG,KAAK9B,SAAS,GAAGvB,UAAU,CAAC6D,QAAQ,CAACR,GAAG,CAAC,GAAG9B,SAAS;EACnE;EACA,OAAOsC,QAAQA,CAACpB,KAAK,EAAE;IACnB,MAAMqB,EAAE,GAAGrB,KAAK,CAACnB,CAAC,GAAG,GAAG;IACxB,MAAMyC,EAAE,GAAGtB,KAAK,CAACpB,CAAC,GAAG,GAAG;IACxB,MAAM2C,EAAE,GAAGvB,KAAK,CAACtB,CAAC,GAAG,GAAG;IACxB,MAAM8C,GAAG,GAAGC,IAAI,CAACD,GAAG,CAACH,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;IAChC,MAAMG,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACL,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;IAChC,MAAMtB,GAAG,GAAG;MACRjB,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE,CAACuC,GAAG,GAAGE,GAAG,IAAI,CAAC;MAClBxC,CAAC,EAAE;IACP,CAAC;IACD,IAAIsC,GAAG,IAAIE,GAAG,EAAE;MACZzB,GAAG,CAACf,CAAC,GAAGe,GAAG,CAAChB,CAAC,GAAG,GAAG,GAAG,CAACuC,GAAG,GAAGE,GAAG,KAAKF,GAAG,GAAGE,GAAG,CAAC,GAAG,CAACF,GAAG,GAAGE,GAAG,KAAK,GAAG,GAAGF,GAAG,GAAGE,GAAG,CAAC;MACjFzB,GAAG,CAACjB,CAAC,GACDqC,EAAE,KAAKG,GAAG,GACJ,CAACF,EAAE,GAAGC,EAAE,KAAKC,GAAG,GAAGE,GAAG,CAAC,GACtBzB,GAAG,CAACjB,CAAC,GAAGsC,EAAE,KAAKE,GAAG,GAAG,GAAG,GAAG,CAACD,EAAE,GAAGF,EAAE,KAAKG,GAAG,GAAGE,GAAG,CAAC,GAAG,GAAG,GAAG,CAACL,EAAE,GAAGC,EAAE,KAAKE,GAAG,GAAGE,GAAG,CAAE;IAClG;IACAzB,GAAG,CAAChB,CAAC,IAAI,GAAG;IACZgB,GAAG,CAACf,CAAC,IAAI,GAAG;IACZe,GAAG,CAACjB,CAAC,IAAI,EAAE;IACX,IAAIiB,GAAG,CAACjB,CAAC,GAAG,CAAC,EAAE;MACXiB,GAAG,CAACjB,CAAC,IAAI,GAAG;IAChB;IACA,OAAOiB,GAAG;EACd;EACA,OAAO0B,aAAaA,CAACzD,KAAK,EAAE;IACxB,IAAI2B,EAAE;IACN,OAAO,CAACA,EAAE,GAAG5B,YAAY,CAACC,KAAK,CAAC,MAAM,IAAI,IAAI2B,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACtB,CAAC;EAC/E;EACA,OAAO8B,WAAWA,CAACnC,KAAK,EAAE;IACtB,OAAOD,YAAY,CAACC,KAAK,CAAC;EAC9B;EACA,OAAO6C,QAAQA,CAACD,GAAG,EAAE;IACjB,MAAMzC,MAAM,GAAG;MAAEK,CAAC,EAAE,CAAC;MAAEE,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IACnC,MAAM+C,UAAU,GAAG;MACf5C,CAAC,EAAE8B,GAAG,CAAC9B,CAAC,GAAG,GAAG;MACdC,CAAC,EAAE6B,GAAG,CAAC7B,CAAC,GAAG,GAAG;MACdC,CAAC,EAAE4B,GAAG,CAAC5B,CAAC,GAAG;IACf,CAAC;IACD,IAAI0C,UAAU,CAAC1C,CAAC,KAAK,CAAC,EAAE;MACpBb,MAAM,CAACK,CAAC,GAAGkD,UAAU,CAAC3C,CAAC;MACvBZ,MAAM,CAACO,CAAC,GAAGgD,UAAU,CAAC3C,CAAC;MACvBZ,MAAM,CAACQ,CAAC,GAAG+C,UAAU,CAAC3C,CAAC;IAC3B,CAAC,MACI;MACD,MAAMnB,CAAC,GAAG8D,UAAU,CAAC3C,CAAC,GAAG,GAAG,GACtB2C,UAAU,CAAC3C,CAAC,IAAI,CAAC,GAAG2C,UAAU,CAAC1C,CAAC,CAAC,GACjC0C,UAAU,CAAC3C,CAAC,GAAG2C,UAAU,CAAC1C,CAAC,GAAG0C,UAAU,CAAC3C,CAAC,GAAG2C,UAAU,CAAC1C,CAAC;MAC/D,MAAMrB,CAAC,GAAG,CAAC,GAAG+D,UAAU,CAAC3C,CAAC,GAAGnB,CAAC;MAC9BO,MAAM,CAACQ,CAAC,GAAGjB,OAAO,CAACC,CAAC,EAAEC,CAAC,EAAE8D,UAAU,CAAC5C,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MAC9CX,MAAM,CAACO,CAAC,GAAGhB,OAAO,CAACC,CAAC,EAAEC,CAAC,EAAE8D,UAAU,CAAC5C,CAAC,CAAC;MACtCX,MAAM,CAACK,CAAC,GAAGd,OAAO,CAACC,CAAC,EAAEC,CAAC,EAAE8D,UAAU,CAAC5C,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAClD;IACAX,MAAM,CAACQ,CAAC,GAAG4C,IAAI,CAACI,KAAK,CAACxD,MAAM,CAACQ,CAAC,GAAG,GAAG,CAAC;IACrCR,MAAM,CAACO,CAAC,GAAG6C,IAAI,CAACI,KAAK,CAACxD,MAAM,CAACO,CAAC,GAAG,GAAG,CAAC;IACrCP,MAAM,CAACK,CAAC,GAAG+C,IAAI,CAACI,KAAK,CAACxD,MAAM,CAACK,CAAC,GAAG,GAAG,CAAC;IACrC,OAAOL,MAAM;EACjB;EACA,OAAOU,UAAUA,CAAC+C,IAAI,EAAE;IACpB,MAAMC,SAAS,GAAGxE,UAAU,CAACwD,QAAQ,CAACe,IAAI,CAAC;IAC3C,OAAO;MACHvD,CAAC,EAAEuD,IAAI,CAACvD,CAAC;MACTG,CAAC,EAAEqD,SAAS,CAACrD,CAAC;MACdE,CAAC,EAAEmD,SAAS,CAACnD,CAAC;MACdC,CAAC,EAAEkD,SAAS,CAAClD;IACjB,CAAC;EACL;EACA,OAAOmD,QAAQA,CAAClB,GAAG,EAAE;IACjB,MAAM7B,CAAC,GAAG6B,GAAG,CAAC7B,CAAC,GAAG,GAAG;MAAEgD,EAAE,GAAGnB,GAAG,CAAC5B,CAAC,GAAG,GAAG;IACvC,MAAME,CAAC,GAAGH,CAAC,GAAGgD,EAAE,GAAGR,IAAI,CAACC,GAAG,CAACzC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC;MAAEiD,EAAE,GAAG,CAAC9C,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAGH,CAAC,GAAGG,CAAC,CAAC;IACpE,OAAO;MACHJ,CAAC,EAAE8B,GAAG,CAAC9B,CAAC;MACRE,CAAC,EAAEgD,EAAE,GAAG,GAAG;MACX9C,CAAC,EAAEA,CAAC,GAAG;IACX,CAAC;EACL;EACA,OAAO+C,UAAUA,CAACL,IAAI,EAAE;IACpB,MAAMM,SAAS,GAAG7E,UAAU,CAACyE,QAAQ,CAACF,IAAI,CAAC;IAC3C,OAAO;MACHvD,CAAC,EAAEuD,IAAI,CAACvD,CAAC;MACTS,CAAC,EAAEoD,SAAS,CAACpD,CAAC;MACdE,CAAC,EAAEkD,SAAS,CAAClD,CAAC;MACdE,CAAC,EAAEgD,SAAS,CAAChD;IACjB,CAAC;EACL;EACA,OAAOiD,QAAQA,CAACpB,GAAG,EAAE;IACjB,MAAM7B,CAAC,GAAG6B,GAAG,CAAC7B,CAAC,GAAG,GAAG;MAAE8C,EAAE,GAAGjB,GAAG,CAAC/B,CAAC,GAAG,GAAG;IACvC,MAAMD,CAAC,GAAGG,CAAC,IAAI,CAAC,GAAG8C,EAAE,GAAG,CAAC,CAAC;MAAED,EAAE,GAAGhD,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAACG,CAAC,GAAGH,CAAC,IAAIwC,IAAI,CAACC,GAAG,CAACzC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC;IACtF,OAAO;MACHD,CAAC,EAAEiC,GAAG,CAACjC,CAAC;MACRC,CAAC,EAAEA,CAAC,GAAG,GAAG;MACVC,CAAC,EAAE+C,EAAE,GAAG;IACZ,CAAC;EACL;EACA,OAAOK,UAAUA,CAACC,IAAI,EAAE;IACpB,MAAMC,SAAS,GAAGjF,UAAU,CAAC8E,QAAQ,CAACE,IAAI,CAAC;IAC3C,OAAO;MACHhE,CAAC,EAAEgE,IAAI,CAAChE,CAAC;MACTS,CAAC,EAAEwD,SAAS,CAACxD,CAAC;MACdC,CAAC,EAAEuD,SAAS,CAACvD,CAAC;MACdC,CAAC,EAAEsD,SAAS,CAACtD;IACjB,CAAC;EACL;EACA,OAAOgC,QAAQA,CAACD,GAAG,EAAE;IACjB,MAAM5C,MAAM,GAAG;MAAEK,CAAC,EAAE,CAAC;MAAEE,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IACnC,MAAM4D,UAAU,GAAG;MACfzD,CAAC,EAAEiC,GAAG,CAACjC,CAAC,GAAG,EAAE;MACbE,CAAC,EAAE+B,GAAG,CAAC/B,CAAC,GAAG,GAAG;MACdE,CAAC,EAAE6B,GAAG,CAAC7B,CAAC,GAAG;IACf,CAAC;IACD,MAAMsD,CAAC,GAAGD,UAAU,CAACrD,CAAC,GAAGqD,UAAU,CAACvD,CAAC;MAAEyD,CAAC,GAAGD,CAAC,IAAI,CAAC,GAAGjB,IAAI,CAACmB,GAAG,CAAEH,UAAU,CAACzD,CAAC,GAAG,CAAC,GAAI,CAAC,CAAC,CAAC;IACrF,IAAI6D,OAAO;IACX,IAAIJ,UAAU,CAACzD,CAAC,IAAI,CAAC,IAAIyD,UAAU,CAACzD,CAAC,IAAI,CAAC,EAAE;MACxC6D,OAAO,GAAG;QACNhE,CAAC,EAAE6D,CAAC;QACJ9D,CAAC,EAAE+D,CAAC;QACJjE,CAAC,EAAE;MACP,CAAC;IACL,CAAC,MACI,IAAI+D,UAAU,CAACzD,CAAC,GAAG,CAAC,IAAIyD,UAAU,CAACzD,CAAC,IAAI,CAAC,EAAE;MAC5C6D,OAAO,GAAG;QACNhE,CAAC,EAAE8D,CAAC;QACJ/D,CAAC,EAAE8D,CAAC;QACJhE,CAAC,EAAE;MACP,CAAC;IACL,CAAC,MACI,IAAI+D,UAAU,CAACzD,CAAC,GAAG,CAAC,IAAIyD,UAAU,CAACzD,CAAC,IAAI,CAAC,EAAE;MAC5C6D,OAAO,GAAG;QACNhE,CAAC,EAAE,CAAC;QACJD,CAAC,EAAE8D,CAAC;QACJhE,CAAC,EAAEiE;MACP,CAAC;IACL,CAAC,MACI,IAAIF,UAAU,CAACzD,CAAC,GAAG,CAAC,IAAIyD,UAAU,CAACzD,CAAC,IAAI,CAAC,EAAE;MAC5C6D,OAAO,GAAG;QACNhE,CAAC,EAAE,CAAC;QACJD,CAAC,EAAE+D,CAAC;QACJjE,CAAC,EAAEgE;MACP,CAAC;IACL,CAAC,MACI,IAAID,UAAU,CAACzD,CAAC,GAAG,CAAC,IAAIyD,UAAU,CAACzD,CAAC,IAAI,CAAC,EAAE;MAC5C6D,OAAO,GAAG;QACNhE,CAAC,EAAE8D,CAAC;QACJ/D,CAAC,EAAE,CAAC;QACJF,CAAC,EAAEgE;MACP,CAAC;IACL,CAAC,MACI,IAAID,UAAU,CAACzD,CAAC,GAAG,CAAC,IAAIyD,UAAU,CAACzD,CAAC,IAAI,CAAC,EAAE;MAC5C6D,OAAO,GAAG;QACNhE,CAAC,EAAE6D,CAAC;QACJ9D,CAAC,EAAE,CAAC;QACJF,CAAC,EAAEiE;MACP,CAAC;IACL;IACA,IAAIE,OAAO,EAAE;MACT,MAAMC,CAAC,GAAGL,UAAU,CAACrD,CAAC,GAAGsD,CAAC;MAC1BrE,MAAM,CAACQ,CAAC,GAAG4C,IAAI,CAACI,KAAK,CAAC,CAACgB,OAAO,CAAChE,CAAC,GAAGiE,CAAC,IAAI,GAAG,CAAC;MAC5CzE,MAAM,CAACO,CAAC,GAAG6C,IAAI,CAACI,KAAK,CAAC,CAACgB,OAAO,CAACjE,CAAC,GAAGkE,CAAC,IAAI,GAAG,CAAC;MAC5CzE,MAAM,CAACK,CAAC,GAAG+C,IAAI,CAACI,KAAK,CAAC,CAACgB,OAAO,CAACnE,CAAC,GAAGoE,CAAC,IAAI,GAAG,CAAC;IAChD;IACA,OAAOzE,MAAM;EACjB;EACA,OAAOc,UAAUA,CAACoD,IAAI,EAAE;IACpB,MAAMR,SAAS,GAAGxE,UAAU,CAAC2D,QAAQ,CAACqB,IAAI,CAAC;IAC3C,OAAO;MACHhE,CAAC,EAAEgE,IAAI,CAAChE,CAAC;MACTG,CAAC,EAAEqD,SAAS,CAACrD,CAAC;MACdE,CAAC,EAAEmD,SAAS,CAACnD,CAAC;MACdC,CAAC,EAAEkD,SAAS,CAAClD;IACjB,CAAC;EACL;EACA,OAAOkE,QAAQA,CAACnC,GAAG,EAAE;IACjB,MAAMoC,UAAU,GAAG;QACfnE,CAAC,EAAE+B,GAAG,CAAC/B,CAAC,GAAG,GAAG;QACdD,CAAC,EAAEgC,GAAG,CAAChC,CAAC,GAAG,GAAG;QACdF,CAAC,EAAEkC,GAAG,CAAClC,CAAC,GAAG;MACf,CAAC;MAAEuE,IAAI,GAAGxB,IAAI,CAACD,GAAG,CAACwB,UAAU,CAACnE,CAAC,EAAEmE,UAAU,CAACpE,CAAC,EAAEoE,UAAU,CAACtE,CAAC,CAAC;MAAEwE,IAAI,GAAGzB,IAAI,CAACC,GAAG,CAACsB,UAAU,CAACnE,CAAC,EAAEmE,UAAU,CAACpE,CAAC,EAAEoE,UAAU,CAACtE,CAAC,CAAC;MAAEU,CAAC,GAAG6D,IAAI;MAAEP,CAAC,GAAGO,IAAI,GAAGC,IAAI;IAClJ,IAAIlE,CAAC,GAAG,CAAC;IACT,IAAII,CAAC,KAAK4D,UAAU,CAACnE,CAAC,EAAE;MACpBG,CAAC,GAAG,EAAE,IAAI,CAACgE,UAAU,CAACpE,CAAC,GAAGoE,UAAU,CAACtE,CAAC,IAAIgE,CAAC,CAAC;IAChD,CAAC,MACI,IAAItD,CAAC,KAAK4D,UAAU,CAACpE,CAAC,EAAE;MACzBI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAACgE,UAAU,CAACtE,CAAC,GAAGsE,UAAU,CAACnE,CAAC,IAAI6D,CAAC,CAAC;IACpD,CAAC,MACI,IAAItD,CAAC,KAAK4D,UAAU,CAACtE,CAAC,EAAE;MACzBM,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAACgE,UAAU,CAACnE,CAAC,GAAGmE,UAAU,CAACpE,CAAC,IAAI8D,CAAC,CAAC;IACpD;IACA,MAAMxD,CAAC,GAAG,CAACE,CAAC,GAAG,CAAC,GAAGsD,CAAC,GAAGtD,CAAC;IACxB,OAAO;MACHJ,CAAC;MACDE,CAAC,EAAEA,CAAC,GAAG,GAAG;MACVE,CAAC,EAAEA,CAAC,GAAG;IACX,CAAC;EACL;EACA,OAAO+D,UAAUA,CAACC,IAAI,EAAE;IACpB,MAAMhB,SAAS,GAAG7E,UAAU,CAACwF,QAAQ,CAACK,IAAI,CAAC;IAC3C,OAAO;MACH7E,CAAC,EAAE6E,IAAI,CAAC7E,CAAC;MACTS,CAAC,EAAEoD,SAAS,CAACpD,CAAC;MACdE,CAAC,EAAEkD,SAAS,CAAClD,CAAC;MACdE,CAAC,EAAEgD,SAAS,CAAChD;IACjB,CAAC;EACL;EACA,OAAOgB,iBAAiBA,CAACsB,GAAG,EAAE;IAC1B,MAAM2B,QAAQ,GAAG3B,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,KAAK,CAAC,GAAGA,GAAG,GAAG,CAAC;IACzD,OAAO;MACHhD,CAAC,EAAE+C,IAAI,CAACI,KAAK,CAAClE,aAAa,CAAC2F,WAAW,CAACC,aAAa,CAAC5F,aAAa,CAAC2F,WAAW,CAACE,aAAa,CAACH,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;MAC9GzE,CAAC,EAAE6C,IAAI,CAACI,KAAK,CAAClE,aAAa,CAAC2F,WAAW,CAACC,aAAa,CAAC5F,aAAa,CAAC2F,WAAW,CAACE,aAAa,CAACH,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;MAC9GxE,CAAC,EAAE4C,IAAI,CAACI,KAAK,CAAClE,aAAa,CAAC2F,WAAW,CAACC,aAAa,CAAC5F,aAAa,CAAC2F,WAAW,CAACE,aAAa,CAACH,QAAQ,EAAE,GAAG,CAAC,CAAC;IACjH,CAAC;EACL;EACA,OAAOI,eAAeA,CAACzD,KAAK,EAAE0D,OAAO,EAAE;IACnC,OAAQ,QAAO1D,KAAK,CAACnB,CAAE,KAAImB,KAAK,CAACpB,CAAE,KAAIoB,KAAK,CAACtB,CAAE,KAAIgF,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAGA,OAAO,GAAG,CAAE,GAAE;EAC9G;EACA,OAAOC,eAAeA,CAAC3D,KAAK,EAAE0D,OAAO,EAAE;IACnC,OAAQ,QAAO1D,KAAK,CAAChB,CAAE,KAAIgB,KAAK,CAACd,CAAE,MAAKc,KAAK,CAACf,CAAE,MAAKyE,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAGA,OAAO,GAAG,CAAE,GAAE;EAChH;EACA,OAAOE,eAAeA,CAAC5D,KAAK,EAAE0D,OAAO,EAAE;IACnC,OAAOnG,UAAU,CAACoG,eAAe,CAACpG,UAAU,CAAC8E,QAAQ,CAACrC,KAAK,CAAC,EAAE0D,OAAO,CAAC;EAC1E;EACA,OAAOG,GAAGA,CAACC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAE;IACrC,IAAIC,IAAI,GAAGJ,MAAM;IACjB,IAAIK,IAAI,GAAGJ,MAAM;IACjB,IAAIG,IAAI,CAACrF,CAAC,KAAKC,SAAS,EAAE;MACtBoF,IAAI,GAAG3G,UAAU,CAACwD,QAAQ,CAAC+C,MAAM,CAAC;IACtC;IACA,IAAIK,IAAI,CAACtF,CAAC,KAAKC,SAAS,EAAE;MACtBqF,IAAI,GAAG5G,UAAU,CAACwD,QAAQ,CAACgD,MAAM,CAAC;IACtC;IACA,OAAO;MACHrF,CAAC,EAAEf,aAAa,CAAC2F,WAAW,CAACO,GAAG,CAACK,IAAI,CAACxF,CAAC,EAAEyF,IAAI,CAACzF,CAAC,EAAEsF,KAAK,EAAEC,KAAK,CAAC;MAC9DrF,CAAC,EAAEjB,aAAa,CAAC2F,WAAW,CAACO,GAAG,CAACK,IAAI,CAACtF,CAAC,EAAEuF,IAAI,CAACvF,CAAC,EAAEoF,KAAK,EAAEC,KAAK,CAAC;MAC9DpF,CAAC,EAAElB,aAAa,CAAC2F,WAAW,CAACO,GAAG,CAACK,IAAI,CAACrF,CAAC,EAAEsF,IAAI,CAACtF,CAAC,EAAEmF,KAAK,EAAEC,KAAK;IACjE,CAAC;EACL;EACA,OAAOG,eAAeA,CAACC,UAAU,EAAErE,KAAK,EAAE0D,OAAO,EAAE;IAC/C,MAAM;MAAEY;IAAQ,CAAC,GAAGD,UAAU;IAC9B,IAAI,CAACC,OAAO,EAAE;MACV,OAAO,EAAE;IACb;IACA,IAAIA,OAAO,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;MAC1B,MAAMC,YAAY,GAAG,sGAAsG;MAC3H,OAAOF,OAAO,CAAC/E,OAAO,CAACiF,YAAY,EAAE,MAAMjH,UAAU,CAACoG,eAAe,CAAC3D,KAAK,EAAE0D,OAAO,CAAC,CAAC;IAC1F;IACA,MAAMe,YAAY,GAAGH,OAAO,CAACI,OAAO,CAAC,GAAG,CAAC;IACzC,OAAQ,GAAEJ,OAAO,CAACK,SAAS,CAAC,CAAC,EAAEF,YAAY,CAAE,UAASlH,UAAU,CAACoG,eAAe,CAAC3D,KAAK,EAAE0D,OAAO,CAAE,IAAGY,OAAO,CAACK,SAAS,CAACF,YAAY,CAAE,EAAC;EACzI;EACA,OAAOG,YAAYA,CAACC,EAAE,EAAEC,EAAE,EAAEC,SAAS,EAAE;IACnC,IAAIlF,EAAE,EAAEC,EAAE;IACV,IAAIiF,SAAS,KAAKrH,WAAW,CAACwC,SAAS,CAACC,gBAAgB,EAAE;MACtD,OAAO5C,UAAU,CAAC6C,iBAAiB,EAAE;IACzC,CAAC,MACI,IAAI2E,SAAS,KAAK,KAAK,EAAE;MAC1B,MAAMC,WAAW,GAAG,CAACnF,EAAE,GAAGgF,EAAE,CAACI,YAAY,EAAE,MAAM,IAAI,IAAIpF,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGgF,EAAE,CAACK,cAAc,EAAE;MACjG,MAAMC,SAAS,GAAG,CAACrF,EAAE,GAAGgF,EAAE,KAAK,IAAI,IAAIA,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,YAAY,EAAE,MAAM,IAAI,IAAInF,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGgF,EAAE,KAAK,IAAI,IAAIA,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACI,cAAc,EAAE;MAC/K,IAAIF,WAAW,IAAIG,SAAS,IAAIL,EAAE,EAAE;QAChC,OAAOvH,UAAU,CAACsG,GAAG,CAACmB,WAAW,EAAEG,SAAS,EAAEN,EAAE,CAACO,SAAS,EAAE,EAAEN,EAAE,CAACM,SAAS,EAAE,CAAC;MACjF,CAAC,MACI;QACD,MAAMvE,QAAQ,GAAGmE,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK,KAAK,CAAC,GAAGA,WAAW,GAAGG,SAAS;QACzF,IAAItE,QAAQ,EAAE;UACV,OAAOtD,UAAU,CAACwD,QAAQ,CAACF,QAAQ,CAAC;QACxC;MACJ;IACJ,CAAC,MACI;MACD,OAAOkE,SAAS;IACpB;EACJ;EACA,OAAOM,kBAAkBA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,OAAO,EAAE;IAChD,MAAMxF,KAAK,GAAG,OAAOsF,QAAQ,KAAK,QAAQ,GAAGA,QAAQ,GAAGA,QAAQ,CAAChI,KAAK;IACtE,IAAI0C,KAAK,KAAKtC,WAAW,CAACwC,SAAS,CAACC,gBAAgB,EAAE;MAClD,IAAIqF,OAAO,EAAE;QACT,OAAOjI,UAAU,CAACkC,UAAU,CAAC;UACzBnC,KAAK,EAAE0C;QACX,CAAC,CAAC;MACN,CAAC,MACI,IAAIuF,KAAK,EAAE;QACZ,OAAO7H,WAAW,CAACwC,SAAS,CAACC,gBAAgB;MACjD,CAAC,MACI;QACD,OAAOzC,WAAW,CAACwC,SAAS,CAACuF,aAAa;MAC9C;IACJ,CAAC,MACI;MACD,OAAOlI,UAAU,CAACkC,UAAU,CAAC;QACzBnC,KAAK,EAAE0C;MACX,CAAC,CAAC;IACN;EACJ;EACA,OAAO0F,mBAAmBA,CAACC,SAAS,EAAE;IAClC,OAAOA,SAAS,KAAK7G,SAAS,GACxB;MACEE,CAAC,EAAE2G,SAAS,CAAC3G,CAAC,CAAC1B,KAAK;MACpB4B,CAAC,EAAEyG,SAAS,CAACzG,CAAC,CAAC5B,KAAK;MACpB2B,CAAC,EAAE0G,SAAS,CAAC1G,CAAC,CAAC3B;IACnB,CAAC,GACCwB,SAAS;EACnB;AACJ;AACAzB,OAAO,CAACE,UAAU,GAAGA,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}