{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Connector = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Modes_1 = require(\"../../Enums/Modes\");\nclass Connector {\n  constructor(container) {\n    this.container = container;\n  }\n  isEnabled() {\n    const container = this.container;\n    const mouse = container.interactivity.mouse;\n    const events = container.actualOptions.interactivity.events;\n    if (!(events.onHover.enable && mouse.position)) {\n      return false;\n    }\n    const hoverMode = events.onHover.mode;\n    return Utils_1.Utils.isInArray(Modes_1.HoverMode.connect, hoverMode);\n  }\n  reset() {}\n  interact() {\n    const container = this.container;\n    const options = container.actualOptions;\n    if (options.interactivity.events.onHover.enable && container.interactivity.status === \"mousemove\") {\n      const mousePos = container.interactivity.mouse.position;\n      if (!mousePos) {\n        return;\n      }\n      const distance = Math.abs(container.retina.connectModeRadius);\n      const query = container.particles.quadTree.queryCircle(mousePos, distance);\n      let i = 0;\n      for (const p1 of query) {\n        const pos1 = p1.getPosition();\n        for (const p2 of query.slice(i + 1)) {\n          const pos2 = p2.getPosition();\n          const distMax = Math.abs(container.retina.connectModeDistance);\n          const xDiff = Math.abs(pos1.x - pos2.x);\n          const yDiff = Math.abs(pos1.y - pos2.y);\n          if (xDiff < distMax && yDiff < distMax) {\n            container.canvas.drawConnectLine(p1, p2);\n          }\n        }\n        ++i;\n      }\n    }\n  }\n}\nexports.Connector = Connector;","map":{"version":3,"names":["Object","defineProperty","exports","value","Connector","Utils_1","require","Modes_1","constructor","container","isEnabled","mouse","interactivity","events","actualOptions","onHover","enable","position","hoverMode","mode","Utils","isInArray","HoverMode","connect","reset","interact","options","status","mousePos","distance","Math","abs","retina","connectModeRadius","query","particles","quadTree","queryCircle","i","p1","pos1","getPosition","p2","slice","pos2","distMax","connectModeDistance","xDiff","x","yDiff","y","canvas","drawConnectLine"],"sources":["H:/React Website/node_modules/tsparticles/Interactions/External/Connector.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connector = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Modes_1 = require(\"../../Enums/Modes\");\nclass Connector {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        const container = this.container;\n        const mouse = container.interactivity.mouse;\n        const events = container.actualOptions.interactivity.events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        return Utils_1.Utils.isInArray(Modes_1.HoverMode.connect, hoverMode);\n    }\n    reset() {\n    }\n    interact() {\n        const container = this.container;\n        const options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"mousemove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius);\n            const query = container.particles.quadTree.queryCircle(mousePos, distance);\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition();\n                    const distMax = Math.abs(container.retina.connectModeDistance);\n                    const xDiff = Math.abs(pos1.x - pos2.x);\n                    const yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        container.canvas.drawConnectLine(p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n}\nexports.Connector = Connector;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,SAAS,GAAG,KAAK,CAAC;AAC1B,MAAMC,OAAO,GAAGC,OAAO,CAAC,aAAa,CAAC;AACtC,MAAMC,OAAO,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAC5C,MAAMF,SAAS,CAAC;EACZI,WAAWA,CAACC,SAAS,EAAE;IACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;EAC9B;EACAC,SAASA,CAAA,EAAG;IACR,MAAMD,SAAS,GAAG,IAAI,CAACA,SAAS;IAChC,MAAME,KAAK,GAAGF,SAAS,CAACG,aAAa,CAACD,KAAK;IAC3C,MAAME,MAAM,GAAGJ,SAAS,CAACK,aAAa,CAACF,aAAa,CAACC,MAAM;IAC3D,IAAI,EAAEA,MAAM,CAACE,OAAO,CAACC,MAAM,IAAIL,KAAK,CAACM,QAAQ,CAAC,EAAE;MAC5C,OAAO,KAAK;IAChB;IACA,MAAMC,SAAS,GAAGL,MAAM,CAACE,OAAO,CAACI,IAAI;IACrC,OAAOd,OAAO,CAACe,KAAK,CAACC,SAAS,CAACd,OAAO,CAACe,SAAS,CAACC,OAAO,EAAEL,SAAS,CAAC;EACxE;EACAM,KAAKA,CAAA,EAAG,CACR;EACAC,QAAQA,CAAA,EAAG;IACP,MAAMhB,SAAS,GAAG,IAAI,CAACA,SAAS;IAChC,MAAMiB,OAAO,GAAGjB,SAAS,CAACK,aAAa;IACvC,IAAIY,OAAO,CAACd,aAAa,CAACC,MAAM,CAACE,OAAO,CAACC,MAAM,IAAIP,SAAS,CAACG,aAAa,CAACe,MAAM,KAAK,WAAW,EAAE;MAC/F,MAAMC,QAAQ,GAAGnB,SAAS,CAACG,aAAa,CAACD,KAAK,CAACM,QAAQ;MACvD,IAAI,CAACW,QAAQ,EAAE;QACX;MACJ;MACA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACtB,SAAS,CAACuB,MAAM,CAACC,iBAAiB,CAAC;MAC7D,MAAMC,KAAK,GAAGzB,SAAS,CAAC0B,SAAS,CAACC,QAAQ,CAACC,WAAW,CAACT,QAAQ,EAAEC,QAAQ,CAAC;MAC1E,IAAIS,CAAC,GAAG,CAAC;MACT,KAAK,MAAMC,EAAE,IAAIL,KAAK,EAAE;QACpB,MAAMM,IAAI,GAAGD,EAAE,CAACE,WAAW,EAAE;QAC7B,KAAK,MAAMC,EAAE,IAAIR,KAAK,CAACS,KAAK,CAACL,CAAC,GAAG,CAAC,CAAC,EAAE;UACjC,MAAMM,IAAI,GAAGF,EAAE,CAACD,WAAW,EAAE;UAC7B,MAAMI,OAAO,GAAGf,IAAI,CAACC,GAAG,CAACtB,SAAS,CAACuB,MAAM,CAACc,mBAAmB,CAAC;UAC9D,MAAMC,KAAK,GAAGjB,IAAI,CAACC,GAAG,CAACS,IAAI,CAACQ,CAAC,GAAGJ,IAAI,CAACI,CAAC,CAAC;UACvC,MAAMC,KAAK,GAAGnB,IAAI,CAACC,GAAG,CAACS,IAAI,CAACU,CAAC,GAAGN,IAAI,CAACM,CAAC,CAAC;UACvC,IAAIH,KAAK,GAAGF,OAAO,IAAII,KAAK,GAAGJ,OAAO,EAAE;YACpCpC,SAAS,CAAC0C,MAAM,CAACC,eAAe,CAACb,EAAE,EAAEG,EAAE,CAAC;UAC5C;QACJ;QACA,EAAEJ,CAAC;MACP;IACJ;EACJ;AACJ;AACApC,OAAO,CAACE,SAAS,GAAGA,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}